<!DOCTYPE html>
<!-- saved from url=(0068)http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    

    <title>dlnd_tv_script_generation</title>
    <link rel="shortcut icon" type="image/x-icon" href="http://35.158.118.232:8888/static/base/images/favicon.ico?v=97c6417ed01bdc0ae3ef32ae4894fd03">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <link rel="stylesheet" href="./dlnd_tv_script_generation_files/jquery-ui.min.css" type="text/css">
    <link rel="stylesheet" href="./dlnd_tv_script_generation_files/jquery.typeahead.min.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    
    


<script type="text/javascript" src="./dlnd_tv_script_generation_files/MathJax.js" charset="utf-8"></script>

<script type="text/javascript">
// MathJax disabled, set as null to distingish from *missing* MathJax,
// where it will be undefined, and should prompt a dialog later.
window.mathjax_url = "/static/components/MathJax/MathJax.js";
</script>

<link rel="stylesheet" href="./dlnd_tv_script_generation_files/bootstrap-tour.min.css" type="text/css">
<link rel="stylesheet" href="./dlnd_tv_script_generation_files/codemirror.css">


    <link rel="stylesheet" href="./dlnd_tv_script_generation_files/style.min.css" type="text/css">
    

<link rel="stylesheet" href="./dlnd_tv_script_generation_files/override.css" type="text/css">
<link rel="stylesheet" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb" id="kernel-css" type="text/css">


    <link rel="stylesheet" href="./dlnd_tv_script_generation_files/custom.css" type="text/css">
    <script src="./dlnd_tv_script_generation_files/promise.min.js" type="text/javascript" charset="utf-8"></script>
    <script src="./dlnd_tv_script_generation_files/require.js" type="text/javascript" charset="utf-8"></script>
    <script>
      require.config({
          
          urlArgs: "v=20170505092648",
          
          baseUrl: '/static/',
          paths: {
            'auth/js/main': 'auth/js/main.min',
            custom : '/custom',
            nbextensions : '/nbextensions',
            kernelspecs : '/kernelspecs',
            underscore : 'components/underscore/underscore-min',
            backbone : 'components/backbone/backbone-min',
            jquery: 'components/jquery/jquery.min',
            bootstrap: 'components/bootstrap/js/bootstrap.min',
            bootstraptour: 'components/bootstrap-tour/build/js/bootstrap-tour.min',
            'jquery-ui': 'components/jquery-ui/ui/minified/jquery-ui.min',
            moment: 'components/moment/moment',
            codemirror: 'components/codemirror',
            termjs: 'components/xterm.js/dist/xterm',
            typeahead: 'components/jquery-typeahead/dist/jquery.typeahead.min',
          },
	  map: { // for backward compatibility
	    "*": {
		"jqueryui": "jquery-ui",
	    }
	  },
          shim: {
            typeahead: {
              deps: ["jquery"],
              exports: "typeahead"
            },
            underscore: {
              exports: '_'
            },
            backbone: {
              deps: ["underscore", "jquery"],
              exports: "Backbone"
            },
            bootstrap: {
              deps: ["jquery"],
              exports: "bootstrap"
            },
            bootstraptour: {
              deps: ["bootstrap"],
              exports: "Tour"
            },
            "jquery-ui": {
              deps: ["jquery"],
              exports: "$"
            }
          },
          waitSeconds: 30,
      });

      require.config({
          map: {
              '*':{
                'contents': 'services/contents',
              }
          }
      });

      define("bootstrap", function () {
          return window.$;
      });

      define("jquery", function () {
          return window.$;
      });

      define("jqueryui", function () {
          return window.$;
      });

      define("jquery-ui", function () {
          return window.$;
      });
      // error-catching custom.js shim.
      define("custom", function (require, exports, module) {
          try {
              var custom = require('custom/custom');
              console.debug('loaded custom.js');
              return custom;
          } catch (e) {
              console.error("error loading custom.js", e);
              return {};
          }
      })
    </script>

    
    

<script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="services/contents" src="./dlnd_tv_script_generation_files/contents.js"></script><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="custom/custom" src="./dlnd_tv_script_generation_files/custom.js"></script><style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 5px 0px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 5px; -webkit-border-radius: 5px; -moz-border-radius: 5px; -khtml-border-radius: 5px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 1px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: .7em}
.MathJax_MenuRadioCheck.RTL {right: .7em; left: auto}
.MathJax_MenuLabel {padding: 1px 2em 3px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #DDDDDD; margin: 4px 3px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: #606872; color: white}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1em; bottom: 1.5em; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><script type="text/javascript" charset="utf-8" async="" data-requirecontext="_" data-requiremodule="nbextensions/jupyter-js-widgets/extension" src="./dlnd_tv_script_generation_files/extension.js"></script><style type="text/css">.MathJax_Display {text-align: center; margin: 0; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_ExBox {display: block!important; overflow: hidden; width: 1px; height: 60ex; min-height: 0; max-height: none}
.MathJax .MathJax_EmBox {display: block!important; overflow: hidden; width: 1px; height: 60em; min-height: 0; max-height: none}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Blank; src: url('about:blank')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">@font-face {font-family: STIXMathJax_Main-italic; src: url('http://35.158.118.232:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/woff/STIXMathJax_Main-Italic.woff?rev=2.6.0') format('woff'), url('http://35.158.118.232:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/otf/STIXMathJax_Main-Italic.otf?rev=2.6.0') format('opentype')}
</style><style type="text/css">@font-face {font-family: STIXMathJax_Main; src: url('http://35.158.118.232:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/woff/STIXMathJax_Main-Regular.woff?rev=2.6.0') format('woff'), url('http://35.158.118.232:8888/static/components/MathJax/fonts/HTML-CSS/STIX-Web/otf/STIXMathJax_Main-Regular.otf?rev=2.6.0') format('opentype')}
</style><style type="text/css">.widget-modal-backdrop{position:absolute;left:0;top:0;width:100%;height:100%;background:#000;z-index:999;opacity:.5;display:flex;align-items:center;justify-content:center;flex-direction:column}.widget-modal-backdrop.widget-modal-hidden{display:none}.widget-modal-backdrop.widget-modal-hide{animation:fadeout .25s}.widget-modal-backdrop.widget-modal-show{animation:fadein .25s}@keyframes fadein{from{opacity:0}to{opacity:.5}}@keyframes fadeout{from{opacity:.5}to{opacity:0}}.widget-modal-text{color:#fff;font-size:x-large;font-weight:700}.widget-modal-text div,.widget-modal-text i{display:inline}.widget-modal-text div{padding-left:1ex}.widget-modal-progress{width:300px}.jupyter-widgets{margin:2px}.jupyter-widgets.widget-container{margin:0}.widget-area{page-break-inside:avoid;-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-area .widget-subarea{padding:.4em 0;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-webkit-box-flex:2;-moz-box-flex:2;box-flex:2;flex:2;-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-area.connection-problems .prompt:after{content:"\F127";font-family:FontAwesome;color:#d9534f;top:3px;padding:3px}.slide-track{border:1px solid #CCC;background:#FFF;border-radius:2px}.widget-hslider{width:300px}.widget-hslider .slider-container{padding-left:8px;padding-right:2px;overflow:visible;flex-grow:1;height:5px;max-height:5px;margin-top:15px;margin-bottom:12px;border:1px solid #CCC;background:#FFF;border-radius:2px;-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-hslider .slider-container .ui-slider{-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch;-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;flex:1;border:0;background:0 0}.widget-hslider .slider-container .ui-slider .ui-slider-handle{width:12px;height:28px;margin-top:-8px;border-radius:2px}.widget-hslider .slider-container .ui-slider .ui-slider-range{height:12px;margin-top:-4px}.widget-vslider{width:50px;height:250px}.widget-vslider .slider-container{padding-bottom:5px;overflow:visible;flex-grow:1;width:5px;max-width:5px;margin-left:auto;margin-right:auto;border:1px solid #CCC;background:#FFF;border-radius:2px;-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-vslider .slider-container .ui-slider{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch;-webkit-box-flex:1;-moz-box-flex:1;box-flex:1;flex:1;border:0;background:0 0;margin-left:-4px;margin-top:5px}.widget-vslider .slider-container .ui-slider .ui-slider-handle{width:28px;height:12px;margin-left:-9px;border-radius:2px}.widget-vslider .slider-container .ui-slider .ui-slider-range{width:12px;margin-left:-1px}.widget-colorpicker{width:300px;display:flex}.widget-colorpicker.short{width:148px}.widget-colorpicker .input-group{flex-grow:1}.widget-button{width:148px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.widget-button.btn,.widget-button.btn.hover,.widget-button.btn:active,.widget-button.btn:focus{outline:0!important}.widget-button.btn:active{box-shadow:0 4px 5px 0 rgba(0,0,0,.14),0 1px 10px 0 rgba(0,0,0,.12),0 2px 4px -1px rgba(0,0,0,.2)}.widget-checkbox{width:148px}.widget-toggle-button{width:148px;box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.widget-toggle-button.btn,.widget-toggle-button.btn.hover,.widget-toggle-button.btn:active,.widget-toggle-button.btn:focus,.widget-toggle-buttons .btn,.widget-toggle-buttons .btn.hover,.widget-toggle-buttons .btn:active,.widget-toggle-buttons .btn:focus{outline:0!important}.widget-toggle-buttons .btn.active{box-shadow:none!important}.widget-toggle-buttons .btn-group{box-shadow:0 2px 2px 0 rgba(0,0,0,.14),0 3px 1px -2px rgba(0,0,0,.2),0 1px 5px 0 rgba(0,0,0,.12)}.widget-text{width:300px}.widget-textarea{width:300px}.widget-listbox{width:300px}.widget-select-multiple{width:300px}.widget-select-multiple select.form-control{margin-left:0;margin-right:0}.widget-dropdown{width:300px}.widget-dropdown .widget_item{display:flex;flex-grow:1}.widget-dropdown .widget-combo-btn{flex-grow:1;min-width:10px}.widget-dropdown .dropdown-menu{max-height:200px;overflow:hidden;overflow-y:auto;width:calc(275px)}.widget-hprogress{width:300px;height:32px}.widget-hprogress .progress{flex-grow:1;margin-top:auto;margin-bottom:auto}.widget-hprogress .progress-bar{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}.widget-vprogress{height:250px;width:50px}.widget-vprogress .progress{flex-grow:1;width:12px;margin-left:auto;margin-right:auto;margin-bottom:0}.widget-vprogress .progress-bar{-webkit-transition:none;-moz-transition:none;-ms-transition:none;-o-transition:none;transition:none}.widget-combo-btn{min-width:123px}.widget_item .dropdown-menu li a{color:inherit}.widget-valid{margin:8px 5px 16px}.widget-hbox{-webkit-box-orient:horizontal;-webkit-box-align:stretch;-moz-box-orient:horizontal;-moz-box-align:stretch;box-orient:horizontal;box-align:stretch;display:flex;flex-direction:row;align-items:stretch}.widget-hbox input[type=checkbox]{margin-top:10px;margin-bottom:10px}.widget-hbox input[type=color]{height:32px;width:28px;padding:1px}.widget-hbox .widget-label{min-width:10ex;max-width:10ex;padding-right:8px;padding-top:5px;text-align:right;vertical-align:text-top;word-wrap:break-word}.widget-hbox .widget-readout{padding-left:4px;padding-top:5px;height:32px;text-align:center;vertical-align:text-top;min-width:7em;max-width:7em;margin-left:3px;overflow:hidden;white-space:nowrap}.widget-hbox .widget-readout.overflow{-webkit-box-shadow:0 0 0 1px rgba(77,0,0,.15);-moz-box-shadow:0 0 0 1px rgba(77,0,0,.15);box-shadow:0 0 0 1px rgba(77,0,0,.15)}.widget-vbox{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch}.widget-vbox input[type=color]{height:32px;padding:1px}.widget-vbox .widget-label{padding-bottom:5px;text-align:center;vertical-align:text-bottom}.widget-vbox .widget-readout{padding-top:5px;white-space:nowrap;text-align:center;vertical-align:text-top;margin-top:4px;overflow:hidden}.widget-vbox .widget-readout.overflow{-webkit-box-shadow:0 0 0 1px rgba(77,0,0,.15);-moz-box-shadow:0 0 0 1px rgba(77,0,0,.15);box-shadow:0 0 0 1px rgba(77,0,0,.15)}.widget-box{box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;-webkit-box-align:start;-moz-box-align:start;box-align:start;align-items:flex-start}.widget-radio-box{-webkit-box-orient:vertical;-webkit-box-align:stretch;-moz-box-orient:vertical;-moz-box-align:stretch;box-orient:vertical;box-align:stretch;display:flex;flex-direction:column;align-items:stretch;box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding-top:4px}.widget-radio-box label{margin-top:2px;margin-bottom:2px;margin-left:22px}/*# sourceMappingURL=widgets.min.css.map */</style></head>

<body class="notebook_app command_mode" data-base-url="/" data-ws-url="" data-notebook-name="dlnd_tv_script_generation.ipynb" data-notebook-path="dlnd_tv_script_generation.ipynb"><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"><br></div></div><div id="MathJax_Message" style="display: none;"></div>

<noscript>
    &lt;div id='noscript'&gt;
      Jupyter Notebook requires JavaScript.&lt;br&gt;
      Please enable it to proceed.
  &lt;/div&gt;
</noscript>

<div id="header" style="display: block;">
  <div id="header-container" class="container">
  <div id="ipython_notebook" class="nav navbar-brand pull-left"><a href="http://35.158.118.232:8888/tree" title="dashboard"><img src="./dlnd_tv_script_generation_files/logo.png" alt="Jupyter Notebook"></a></div>

  
  
  

    <span id="login_widget">
      
    </span>

  

  

  


<span id="save_widget" class="pull-left save_widget">
    <span id="notebook_name" class="filename">dlnd_tv_script_generation</span>
    <span class="checkpoint_status" title="no checkpoint"></span>
    <span class="autosave_status">(autosaved)</span>
</span>

<span id="kernel_logo_widget">
  
  <img class="current_kernel_logo" src="./dlnd_tv_script_generation_files/logo-64x64.png" style="display: inline;">
  
</span>


  </div>
  <div class="header-bar"></div>

  
<div id="menubar-container" class="container">
<div id="menubar">
    <div id="menus" class="navbar navbar-default" role="navigation">
        <div class="container-fluid">
            <button type="button" class="btn btn-default navbar-btn navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
              <i class="fa fa-bars"></i>
              <span class="navbar-text">Menu</span>
            </button>
            <p id="kernel_indicator" class="navbar-text indicator_area">
              <span class="kernel_indicator_name">Python 3</span>
              <i id="kernel_indicator_icon" class="kernel_idle_icon" title="Kernel Idle"></i>
            </p>
            <i id="readonly-indicator" class="navbar-text" title="This notebook is read-only" style="display: none;">
                <span class="fa-stack">
                    <i class="fa fa-save fa-stack-1x"></i>
                    <i class="fa fa-ban fa-stack-2x text-danger"></i>
                </span>
            </i>
            <i id="modal_indicator" class="navbar-text modal_indicator" title="Command Mode"></i>
            <span id="notification_area"><div id="notification_kernel" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div><div id="notification_notebook" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div><div id="notification_widgets" class="notification_widget btn btn-xs navbar-btn" style="display: none;"><span></span></div></span>
            <div class="navbar-collapse collapse">
              <ul class="nav navbar-nav">
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">File</a>
                    <ul id="file_menu" class="dropdown-menu">
                        <li id="new_notebook" class="dropdown-submenu">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">New Notebook</a>
                            <ul class="dropdown-menu" id="menu-new-notebook-submenu"><li id="new-notebook-submenu-python3"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Python 3</a></li></ul>
                        </li>
                        <li id="open_notebook" title="Opens a new window with the Dashboard view">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Open...</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="copy_notebook" title="Open a copy of this notebook&#39;s contents and start a new kernel">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Make a Copy...</a></li>
                        <li id="rename_notebook"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Rename...</a></li>
                        <li id="save_checkpoint"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Save and Checkpoint</a></li>
                        <!-- <hr/> -->
                        <li class="divider"></li>
                        <li id="restore_checkpoint" class="dropdown-submenu"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Revert to Checkpoint</a>
                          <ul class="dropdown-menu"><li class="disabled"><a>No checkpoints</a></li></ul>
                        </li>
                        <li class="divider"></li>
                        <li id="print_preview"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Print Preview</a></li>
                        <li class="dropdown-submenu"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Download as</a>
                            <ul class="dropdown-menu">
                                <li id="download_ipynb"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Notebook (.ipynb)</a></li>
                                <li id="download_script"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Python (.py)</a></li>
                                <li id="download_html"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">HTML (.html)</a></li>
                                <li id="download_markdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Markdown (.md)</a></li>
                                <li id="download_rst"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">reST (.rst)</a></li>
                                <li id="download_pdf"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">PDF via LaTeX (.pdf)</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="trust_notebook" title="Trust the output of this notebook" class="disabled">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Trusted Notebook</a></li>
                        <li class="divider"></li>
                        <li id="kill_and_exit" title="Shutdown this notebook&#39;s kernel, and close this window">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Close and Halt</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Edit</a>
                    <ul id="edit_menu" class="dropdown-menu">
                        <li id="cut_cell"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Cut Cells</a></li>
                        <li id="copy_cell"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Copy Cells</a></li>
                        <li id="paste_cell_above" class="disabled"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Paste Cells Above</a></li>
                        <li id="paste_cell_below" class="disabled"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Paste Cells Below</a></li>
                        <li id="paste_cell_replace" class="disabled"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Paste Cells &amp; Replace</a></li>
                        <li id="delete_cell"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Delete Cells</a></li>
                        <li id="undelete_cell" class="disabled"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Undo Delete Cells</a></li>
                        <li class="divider"></li>
                        <li id="split_cell"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Split Cell</a></li>
                        <li id="merge_cell_above"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Merge Cell Above</a></li>
                        <li id="merge_cell_below"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Merge Cell Below</a></li>
                        <li class="divider"></li>
                        <li id="move_cell_up"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Move Cell Up</a></li>
                        <li id="move_cell_down"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Move Cell Down</a></li>
                        <li class="divider"></li>
                        <li id="edit_nb_metadata"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Edit Notebook Metadata</a></li>
                        <li class="divider"></li>
                        <li id="find_and_replace"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#"> Find and Replace </a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">View</a>
                    <ul id="view_menu" class="dropdown-menu">
                        <li id="toggle_header" title="Show/Hide the logo and notebook title (above menu bar)">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle Header</a></li>
                        <li id="toggle_toolbar" title="Show/Hide the action icons (below menu bar)">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle Toolbar</a></li>
                        <li id="menu-cell-toolbar" class="dropdown-submenu">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Cell Toolbar</a>
                            <ul class="dropdown-menu" id="menu-cell-toolbar-submenu"><li data-name="None"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">None</a></li><li data-name="Edit%20Metadata"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Edit Metadata</a></li><li data-name="Raw%20Cell%20Format"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Raw Cell Format</a></li><li data-name="Slideshow"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Slideshow</a></li></ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Insert</a>
                    <ul id="insert_menu" class="dropdown-menu">
                        <li id="insert_cell_above" title="Insert an empty Code cell above the currently active cell">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Insert Cell Above</a></li>
                        <li id="insert_cell_below" title="Insert an empty Code cell below the currently active cell">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Insert Cell Below</a></li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Cell</a>
                    <ul id="cell_menu" class="dropdown-menu">
                        <li id="run_cell" title="Run this cell, and move cursor to the next one">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run Cells</a></li>
                        <li id="run_cell_select_below" title="Run this cell, select below">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run Cells and Select Below</a></li>
                        <li id="run_cell_insert_below" title="Run this cell, insert below">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run Cells and Insert Below</a></li>
                        <li id="run_all_cells" title="Run all cells in the notebook">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run All</a></li>
                        <li id="run_all_cells_above" title="Run all cells above (but not including) this cell">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run All Above</a></li>
                        <li id="run_all_cells_below" title="Run this cell and all cells below it">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Run All Below</a></li>
                        <li class="divider"></li>
                        <li id="change_cell_type" class="dropdown-submenu" title="All cells in the notebook have a cell type. By default, new cells are created as &#39;Code&#39; cells">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Cell Type</a>
                            <ul class="dropdown-menu">
                              <li id="to_code" title="Contents will be sent to the kernel for execution, and output will display in the footer of cell">
                                  <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Code</a></li>
                              <li id="to_markdown" title="Contents will be rendered as HTML and serve as explanatory text">
                                  <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Markdown</a></li>
                              <li id="to_raw" title="Contents will pass through nbconvert unmodified">
                                  <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Raw NBConvert</a></li>
                            </ul>
                        </li>
                        <li class="divider"></li>
                        <li id="current_outputs" class="dropdown-submenu"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Current Outputs</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_current_output" title="Hide/Show the output of the current cell">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle</a>
                                </li>
                                <li id="toggle_current_output_scroll" title="Scroll the output of the current cell">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_current_output" title="Clear the output of the current cell">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Clear</a>
                                </li>
                            </ul>
                        </li>
                        <li id="all_outputs" class="dropdown-submenu"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">All Output</a>
                            <ul class="dropdown-menu">
                                <li id="toggle_all_output" title="Hide/Show the output of all cells">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle</a>
                                </li>
                                <li id="toggle_all_output_scroll" title="Scroll the output of all cells">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Toggle Scrolling</a>
                                </li>
                                <li id="clear_all_output" title="Clear the output of all cells">
                                    <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Clear</a>
                                </li>
                            </ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Kernel</a>
                    <ul id="kernel_menu" class="dropdown-menu">
                        <li id="int_kernel" title="Send KeyboardInterrupt (CTRL-C) to the Kernel">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Interrupt</a>
                        </li>
                        <li id="restart_kernel" title="Restart the Kernel">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Restart</a>
                        </li>
                        <li id="restart_clear_output" title="Restart the Kernel and clear all output">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Restart &amp; Clear Output</a>
                        </li>
                        <li id="restart_run_all" title="Restart the Kernel and re-run the notebook">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Restart &amp; Run All</a>
                        </li>
                        <li id="reconnect_kernel" title="Reconnect to the Kernel">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Reconnect</a>
                        </li>
                        <li class="divider"></li>
                        <li id="menu-change-kernel" class="dropdown-submenu">
                            <a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Change kernel</a>
                            <ul class="dropdown-menu" id="menu-change-kernel-submenu"><li id="kernel-submenu-python3"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Python 3</a></li></ul>
                        </li>
                    </ul>
                </li>
                <li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" data-toggle="dropdown" class="dropdown-toggle">Widgets</a><ul id="widget-submenu" class="dropdown-menu"><li title="Rasterizes the current state of the widgets to the notebook as PNG images."><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Save notebook with snapshots</a></li><li title="Download the widget state as a JSON file"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Download widget state</a></li><li title="Embed interactive widgets"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Embed widgets</a></li></ul></li><li class="dropdown"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="dropdown-toggle" data-toggle="dropdown">Help</a>
                    <ul id="help_menu" class="dropdown-menu">
                        
                        <li id="notebook_tour" title="A quick tour of the notebook user interface"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">User Interface Tour</a></li>
                        <li id="keyboard_shortcuts" title="Opens a tooltip with all keyboard shortcuts"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">Keyboard Shortcuts</a></li>
                        <li class="divider"></li>
                        

                        
                            
                                <li><a rel="noreferrer" href="http://nbviewer.ipython.org/github/ipython/ipython/blob/3.x/examples/Notebook/Index.ipynb" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Notebook Help
                                </a></li>
                            
                                <li><a rel="noreferrer" href="https://help.github.com/articles/markdown-basics/" target="_blank" title="Opens in a new window">
                                
                                    <i class="fa fa-external-link menu-icon pull-right"></i>
                                

                                Markdown
                                </a></li>
                            
                            
                        
                        <li id="kernel-help-links" class="divider"></li><li><a target="_blank" title="Opens in a new window" href="http://docs.python.org/3.5?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>Python</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://ipython.org/documentation.html?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>IPython</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/numpy/reference/?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>NumPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.scipy.org/doc/scipy/reference/?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>SciPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://matplotlib.org/contents.html?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>Matplotlib</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://docs.sympy.org/latest/index.html?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>SymPy</span></a></li><li><a target="_blank" title="Opens in a new window" href="http://pandas.pydata.org/pandas-docs/stable/?v=20170505092648"><i class="fa fa-external-link menu-icon pull-right"></i><span>pandas</span></a></li><li class="divider"></li>
                        <li title="About Jupyter Notebook"><a id="notebook_about" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#">About</a></li>
                        
                    </ul>
                </li>
              </ul>
            </div>
        </div>
    </div>
</div>

<div id="maintoolbar" class="navbar">
  <div class="toolbar-inner navbar-inner navbar-nobg">
    <div id="maintoolbar-container" class="container toolbar"><div class="btn-group" id="save-notbook"><button class="btn btn-default" title="Save and Checkpoint" data-jupyter-action="jupyter-notebook:save-notebook"><i class="fa-save fa"></i></button></div><div class="btn-group" id="insert_above_below"><button class="btn btn-default" title="insert cell below" data-jupyter-action="jupyter-notebook:insert-cell-below"><i class="fa-plus fa"></i></button></div><div class="btn-group" id="cut_copy_paste"><button class="btn btn-default" title="cut selected cells" data-jupyter-action="jupyter-notebook:cut-cell"><i class="fa-cut fa"></i></button><button class="btn btn-default" title="copy selected cells" data-jupyter-action="jupyter-notebook:copy-cell"><i class="fa-copy fa"></i></button><button class="btn btn-default" title="paste cells below" data-jupyter-action="jupyter-notebook:paste-cell-below"><i class="fa-paste fa"></i></button></div><div class="btn-group" id="move_up_down"><button class="btn btn-default" title="move selected cells up" data-jupyter-action="jupyter-notebook:move-cell-up"><i class="fa-arrow-up fa"></i></button><button class="btn btn-default" title="move selected cells down" data-jupyter-action="jupyter-notebook:move-cell-down"><i class="fa-arrow-down fa"></i></button></div><div class="btn-group" id="run_int"><button class="btn btn-default" title="run cell, select below" data-jupyter-action="jupyter-notebook:run-cell-and-select-next"><i class="fa-step-forward fa"></i></button><button class="btn btn-default" title="interrupt kernel" data-jupyter-action="jupyter-notebook:interrupt-kernel"><i class="fa-stop fa"></i></button><button class="btn btn-default" title="restart the kernel (with dialog)" data-jupyter-action="jupyter-notebook:confirm-restart-kernel"><i class="fa-repeat fa"></i></button></div><select id="cell_type" class="form-control select-xs"><option value="code">Code</option><option value="markdown">Markdown</option><option value="raw">Raw NBConvert</option><option value="heading">Heading</option><option value="multiselect" disabled="disabled" style="display: none;">-</option></select><div class="btn-group"><button class="btn btn-default" title="open the command palette" data-jupyter-action="jupyter-notebook:show-command-palette"><i class="fa-keyboard-o fa"></i></button></div><div class="btn-group"><button title="show new celltoolbar selector location" class="btn btn-default">CellToolbar</button></div></div>
  </div>
</div>
</div>

<div class="lower-header-bar"></div>

</div>

<div id="site" style="height: 572px; display: block;">


<div id="ipython-main-app">
    <div id="notebook_panel">
        <div id="notebook" tabindex="-1"><div class="container" id="notebook-container"><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 172px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 22px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># TV Script Generation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">In this project, you'll generate your own <span class="cm-link">[Simpsons]</span><span class="cm-string cm-url">(https://en.wikipedia.org/wiki/The_Simpsons)</span> TV scripts using RNNs.  You'll be using part of the <span class="cm-link">[Simpsons dataset]</span><span class="cm-string cm-url">(https://www.kaggle.com/wcukierski/the-simpsons-by-the-data)</span> of scripts from 27 seasons.  The Neural Network you'll build will generate a new TV script for a scene at <span class="cm-link">[Moe's Tavern]</span><span class="cm-string cm-url">(https://simpsonswiki.com/wiki/Moe's_Tavern)</span>.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Get the Data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The data is already provided for you.  You'll be using a subset of the original dataset.  It consists of only the scenes in Moe's Tavern.  This doesn't include other versions of the tavern, like "Moe's Cavern", "Flaming Moe's", "Uncle Moe's Family Feed-Bag", etc..</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 172px;"></div><div class="CodeMirror-gutters" style="display: none; height: 202px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h1 id="TV-Script-Generation">TV Script Generation<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#TV-Script-Generation">¶</a></h1>
<p>In this project, you'll generate your own <a href="https://en.wikipedia.org/wiki/The_Simpsons" target="_blank">Simpsons</a> TV scripts using RNNs.  You'll be using part of the <a href="https://www.kaggle.com/wcukierski/the-simpsons-by-the-data" target="_blank">Simpsons dataset</a> of scripts from 27 seasons.  The Neural Network you'll build will generate a new TV script for a scene at <a href="https://simpsonswiki.com/wiki/Moe&#39;s_Tavern" target="_blank">Moe's Tavern</a>.</p>
<h2 id="Get-the-Data">Get the Data<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Get-the-Data">¶</a></h2>
<p>The data is already provided for you.  You'll be using a subset of the original dataset.  It consists of only the scenes in Moe's Tavern.  This doesn't include other versions of the tavern, like "Moe's Cavern", "Flaming Moe's", "Uncle Moe's Family Feed-Bag", etc..</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[2]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 515px; margin-bottom: 0px; border-right-width: 30px; min-height: 164px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">helper</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">data_dir</span> = <span class="cm-string">'./data/simpsons/moes_tavern_lines.txt'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">text</span> = <span class="cm-variable">helper</span>.<span class="cm-property">load_data</span>(<span class="cm-variable">data_dir</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Ignore notice, since we don't use it for analysing the data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">text</span> = <span class="cm-variable">text</span>[<span class="cm-number">81</span>:]</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 164px;"></div><div class="CodeMirror-gutters" style="display: none; height: 194px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 48px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Explore the Data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Play around with <span class="cm-comment">`view_sentence_range`</span> to view different parts of the data.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 48px;"></div><div class="CodeMirror-gutters" style="display: none; height: 78px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Explore-the-Data">Explore the Data<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Explore-the-Data">¶</a></h2>
<p>Play around with <code>view_sentence_range</code> to view different parts of the data.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[3]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 826px; margin-bottom: 0px; border-right-width: 30px; min-height: 385px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">view_sentence_range</span> = (<span class="cm-number">0</span>, <span class="cm-number">10</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Dataset Stats'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Roughly the number of unique words: {}'</span>.<span class="cm-property">format</span>(<span class="cm-builtin">len</span>({<span class="cm-variable">word</span>: <span class="cm-keyword">None</span> <span class="cm-keyword">for</span> <span class="cm-variable">word</span> <span class="cm-keyword">in</span> <span class="cm-variable">text</span>.<span class="cm-property">split</span>()})))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">scenes</span> = <span class="cm-variable">text</span>.<span class="cm-property">split</span>(<span class="cm-string">'\n\n'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Number of scenes: {}'</span>.<span class="cm-property">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">scenes</span>)))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">sentence_count_scene</span> = [<span class="cm-variable">scene</span>.<span class="cm-property">count</span>(<span class="cm-string">'\n'</span>) <span class="cm-keyword">for</span> <span class="cm-variable">scene</span> <span class="cm-keyword">in</span> <span class="cm-variable">scenes</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Average number of sentences in each scene: {}'</span>.<span class="cm-property">format</span>(<span class="cm-variable">np</span>.<span class="cm-property">average</span>(<span class="cm-variable">sentence_count_scene</span>)))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">sentences</span> = [<span class="cm-variable">sentence</span> <span class="cm-keyword">for</span> <span class="cm-variable">scene</span> <span class="cm-keyword">in</span> <span class="cm-variable">scenes</span> <span class="cm-keyword">for</span> <span class="cm-variable">sentence</span> <span class="cm-keyword">in</span> <span class="cm-variable">scene</span>.<span class="cm-property">split</span>(<span class="cm-string">'\n'</span>)]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Number of lines: {}'</span>.<span class="cm-property">format</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">sentences</span>)))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">word_count_sentence</span> = [<span class="cm-builtin">len</span>(<span class="cm-variable">sentence</span>.<span class="cm-property">split</span>()) <span class="cm-keyword">for</span> <span class="cm-variable">sentence</span> <span class="cm-keyword">in</span> <span class="cm-variable">sentences</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'Average number of words in each line: {}'</span>.<span class="cm-property">format</span>(<span class="cm-variable">np</span>.<span class="cm-property">average</span>(<span class="cm-variable">word_count_sentence</span>)))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'The sentences {} to {}:'</span>.<span class="cm-property">format</span>(<span class="cm-operator">*</span><span class="cm-variable">view_sentence_range</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'\n'</span>.<span class="cm-property">join</span>(<span class="cm-variable">text</span>.<span class="cm-property">split</span>(<span class="cm-string">'\n'</span>)[<span class="cm-variable">view_sentence_range</span>[<span class="cm-number">0</span>]:<span class="cm-variable">view_sentence_range</span>[<span class="cm-number">1</span>]]))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 385px;"></div><div class="CodeMirror-gutters" style="display: none; height: 415px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Dataset Stats
Roughly the number of unique words: 11492
Number of scenes: 262
Average number of sentences in each scene: 15.248091603053435
Number of lines: 4257
Average number of words in each line: 11.50434578341555

The sentences 0 to 10:
Moe_Szyslak: (INTO PHONE) Moe's Tavern. Where the elite meet to drink.
Bart_Simpson: Eh, yeah, hello, is Mike there? Last name, Rotch.
Moe_Szyslak: (INTO PHONE) Hold on, I'll check. (TO BARFLIES) Mike Rotch. Mike Rotch. Hey, has anybody seen Mike Rotch, lately?
Moe_Szyslak: (INTO PHONE) Listen you little puke. One of these days I'm gonna catch you, and I'm gonna carve my name on your back with an ice pick.
Moe_Szyslak: What's the matter Homer? You're not your normal effervescent self.
Homer_Simpson: I got my problems, Moe. Give me another one.
Moe_Szyslak: Homer, hey, you should not drink to forget your problems.
Barney_Gumble: Yeah, you should only drink to enhance your social skills.


</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 203px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Implement Preprocessing Functions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">The first thing to do to any dataset is preprocessing.  Implement the following preprocessing functions below:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Lookup Table</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Tokenize Punctuation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Lookup Table</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">To create a word embedding, you first need to transform the words to ids.  In this function, create two dictionaries:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Dictionary to go from the words to an id, we'll call </span><span class="cm-comment cm-variable-2">`vocab_to_int`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Dictionary to go from the id to word, we'll call </span><span class="cm-comment cm-variable-2">`int_to_vocab`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return these dictionaries in the following tuple <span class="cm-comment">`(vocab_to_int, int_to_vocab)`</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 203px;"></div><div class="CodeMirror-gutters" style="display: none; height: 233px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Implement-Preprocessing-Functions">Implement Preprocessing Functions<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Implement-Preprocessing-Functions">¶</a></h2>
<p>The first thing to do to any dataset is preprocessing.  Implement the following preprocessing functions below:</p>
<ul>
<li>Lookup Table</li>
<li>Tokenize Punctuation</li>
</ul>
<h3 id="Lookup-Table">Lookup Table<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Lookup-Table">¶</a></h3>
<p>To create a word embedding, you first need to transform the words to ids.  In this function, create two dictionaries:</p>
<ul>
<li>Dictionary to go from the words to an id, we'll call <code>vocab_to_int</code></li>
<li>Dictionary to go from the id to word, we'll call <code>int_to_vocab</code></li>
</ul>
<p>Return these dictionaries in the following tuple <code>(vocab_to_int, int_to_vocab)</code></p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[4]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 540.531px; margin-bottom: 0px; border-right-width: 30px; min-height: 402px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">problem_unittests</span> <span class="cm-keyword">as</span> <span class="cm-variable">tests</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">create_lookup_tables</span>(<span class="cm-variable">text</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Create lookup tables for vocabulary</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param text: The text of tv scripts split into words</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: A tuple of dicts (vocab_to_int, int_to_vocab)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">vocab_to_int</span>   = {}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">current_id</span> = <span class="cm-number">0</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">for</span> <span class="cm-variable">word</span> <span class="cm-keyword">in</span> <span class="cm-variable">text</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-keyword">if</span> <span class="cm-variable">word</span> <span class="cm-keyword">not</span> <span class="cm-keyword">in</span> <span class="cm-variable">vocab_to_int</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">vocab_to_int</span>[<span class="cm-variable">word</span>] = <span class="cm-variable">current_id</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">current_id</span> = <span class="cm-variable">current_id</span> <span class="cm-operator">+</span> <span class="cm-number">1</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">vocab_to_int</span>, {<span class="cm-variable">v</span>: <span class="cm-variable">k</span> <span class="cm-keyword">for</span> <span class="cm-variable">k</span>, <span class="cm-variable">v</span> <span class="cm-keyword">in</span> <span class="cm-variable">vocab_to_int</span>.<span class="cm-property">items</span>()}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_create_lookup_tables</span>(<span class="cm-variable">create_lookup_tables</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 402px;"></div><div class="CodeMirror-gutters" style="display: none; height: 432px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 370px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Tokenize Punctuation</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">We'll be splitting the script into a word array using spaces as delimiters.  However, punctuations like periods and exclamation marks make it hard for the neural network to distinguish between the word "bye" and "bye!".</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Implement the function <span class="cm-comment">`token_lookup`</span> to return a dict that will be used to tokenize symbols like "!" into "||Exclamation_Mark||".  Create a dictionary for the following symbols where the symbol is the key and value is the token:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Period ( . )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Comma ( , )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Quotation Mark ( " )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Semicolon ( ; )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Exclamation mark ( ! )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Question mark ( ? )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Left Parentheses ( ( )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Right Parentheses ( ) )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Dash ( -- )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Return ( \n )</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This dictionary will be used to token the symbols and add the delimiter (space) around it.  This separates the symbols as it's own word, making it easier for the neural network to predict on the next word. Make sure you don't use a token that could be confused as a word. Instead of using the token "dash", try using something like "||dash||".</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 370px;"></div><div class="CodeMirror-gutters" style="display: none; height: 400px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Tokenize-Punctuation">Tokenize Punctuation<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Tokenize-Punctuation">¶</a></h3>
<p>We'll be splitting the script into a word array using spaces as delimiters.  However, punctuations like periods and exclamation marks make it hard for the neural network to distinguish between the word "bye" and "bye!".</p>
<p>Implement the function <code>token_lookup</code> to return a dict that will be used to tokenize symbols like "!" into "||Exclamation_Mark||".  Create a dictionary for the following symbols where the symbol is the key and value is the token:</p>
<ul>
<li>Period ( . )</li>
<li>Comma ( , )</li>
<li>Quotation Mark ( " )</li>
<li>Semicolon ( ; )</li>
<li>Exclamation mark ( ! )</li>
<li>Question mark ( ? )</li>
<li>Left Parentheses ( ( )</li>
<li>Right Parentheses ( ) )</li>
<li>Dash ( -- )</li>
<li>Return ( \n )</li>
</ul>
<p>This dictionary will be used to token the symbols and add the delimiter (space) around it.  This separates the symbols as it's own word, making it easier for the neural network to predict on the next word. Make sure you don't use a token that could be confused as a word. Instead of using the token "dash", try using something like "||dash||".</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[5]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 775.922px; margin-bottom: 0px; border-right-width: 30px; min-height: 402px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">token_lookup</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Generate a dict to turn punctuation into a token.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tokenize dictionary where the key is the punctuation and the value is the token</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span> = {}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'.'</span>] = <span class="cm-string">'||Period||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">','</span>] = <span class="cm-string">'||Comma||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'"'</span>] = <span class="cm-string">'||Quotation_Mark||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">';'</span>] = <span class="cm-string">'||Semicolon||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'!'</span>] = <span class="cm-string">'||Exclamation_mark||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'?'</span>] = <span class="cm-string">'||Question_mark||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'('</span>] = <span class="cm-string">'||Left_Parentheses||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">')'</span>] = <span class="cm-string">'||Right_Parentheses||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'--'</span>] = <span class="cm-string">'||Dash||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tokens</span>[<span class="cm-string">'\n'</span>] = <span class="cm-string">'||Return||'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">tokens</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_tokenize</span>(<span class="cm-variable">token_lookup</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 402px;"></div><div class="CodeMirror-gutters" style="display: none; height: 432px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 48px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Preprocess all the data and save it</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Running the code cell below will preprocess all the data and save it to file.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 48px;"></div><div class="CodeMirror-gutters" style="display: none; height: 78px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Preprocess-all-the-data-and-save-it">Preprocess all the data and save it<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Preprocess-all-the-data-and-save-it">¶</a></h2>
<p>Running the code cell below will preprocess all the data and save it to file.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[6]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 649.828px; margin-bottom: 0px; border-right-width: 30px; min-height: 96px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Preprocess Training, Validation, and Testing Data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">helper</span>.<span class="cm-property">preprocess_and_save_data</span>(<span class="cm-variable">data_dir</span>, <span class="cm-variable">token_lookup</span>, <span class="cm-variable">create_lookup_tables</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 96px;"></div><div class="CodeMirror-gutters" style="display: none; height: 126px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 67px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 22px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># Check Point</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This is your first checkpoint. If you ever decide to come back to this notebook or have to restart the notebook, you can start from here. The preprocessed data has been saved to disk.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 67px;"></div><div class="CodeMirror-gutters" style="display: none; height: 97px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h1 id="Check-Point">Check Point<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Check-Point">¶</a></h1>
<p>This is your first checkpoint. If you ever decide to come back to this notebook or have to restart the notebook, you can start from here. The preprocessed data has been saved to disk.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[7]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 633px; margin-bottom: 0px; border-right-width: 30px; min-height: 147px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">helper</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">problem_unittests</span> <span class="cm-keyword">as</span> <span class="cm-variable">tests</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">int_text</span>, <span class="cm-variable">vocab_to_int</span>, <span class="cm-variable">int_to_vocab</span>, <span class="cm-variable">token_dict</span> = <span class="cm-variable">helper</span>.<span class="cm-property">load_preprocess</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 147px;"></div><div class="CodeMirror-gutters" style="display: none; height: 177px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 186px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Build the Neural Network</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">You'll build the components necessary to build a RNN by implementing the following functions below:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- get_inputs</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- get_init_cell</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- get_embed</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- build_rnn</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- build_nn</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- get_batches</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Check the Version of TensorFlow and Access to GPU</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 186px;"></div><div class="CodeMirror-gutters" style="display: none; height: 216px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Build-the-Neural-Network">Build the Neural Network<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Build-the-Neural-Network">¶</a></h2>
<p>You'll build the components necessary to build a RNN by implementing the following functions below:</p>
<ul>
<li>get_inputs</li>
<li>get_init_cell</li>
<li>get_embed</li>
<li>build_rnn</li>
<li>build_nn</li>
<li>get_batches</li>
</ul>
<h3 id="Check-the-Version-of-TensorFlow-and-Access-to-GPU">Check the Version of TensorFlow and Access to GPU<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Check-the-Version-of-TensorFlow-and-Access-to-GPU">¶</a></h3>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[8]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 876.641px; margin-bottom: 0px; border-right-width: 30px; min-height: 283px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">distutils</span>.<span class="cm-property">version</span> <span class="cm-keyword">import</span> <span class="cm-variable">LooseVersion</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">warnings</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">tensorflow</span> <span class="cm-keyword">as</span> <span class="cm-variable">tf</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Check TensorFlow Version</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">assert</span> <span class="cm-variable">LooseVersion</span>(<span class="cm-variable">tf</span>.<span class="cm-property">__version__</span>) <span class="cm-operator">&gt;</span>= <span class="cm-variable">LooseVersion</span>(<span class="cm-string">'1.0'</span>), <span class="cm-string">'Please use TensorFlow version 1.0 or newer'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-builtin">print</span>(<span class="cm-string">'TensorFlow Version: {}'</span>.<span class="cm-property">format</span>(<span class="cm-variable">tf</span>.<span class="cm-property">__version__</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Check for a GPU</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">if</span> <span class="cm-keyword">not</span> <span class="cm-variable">tf</span>.<span class="cm-property">test</span>.<span class="cm-property">gpu_device_name</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">warnings</span>.<span class="cm-property">warn</span>(<span class="cm-string">'No GPU found. Please use a GPU to train your neural network.'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">else</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-builtin">print</span>(<span class="cm-string">'Default GPU Device: {}'</span>.<span class="cm-property">format</span>(<span class="cm-variable">tf</span>.<span class="cm-property">test</span>.<span class="cm-property">gpu_device_name</span>()))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 283px;"></div><div class="CodeMirror-gutters" style="display: none; height: 313px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>TensorFlow Version: 1.0.0
Default GPU Device: /gpu:0
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 166px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Input</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Implement the <span class="cm-comment">`get_inputs()`</span> function to create TF Placeholders for the Neural Network.  It should create the following placeholders:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Input text placeholder named "input" using the </span><span class="cm-link cm-variable-2">[TF Placeholder]</span><span class="cm-string cm-url cm-variable-2">(https://www.tensorflow.org/api_docs/python/tf/placeholder)</span><span class="cm-variable-2"> </span><span class="cm-comment cm-variable-2">`name`</span><span class="cm-variable-2"> parameter.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Targets placeholder</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Learning Rate placeholder</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return the placeholders in the following tuple <span class="cm-comment">`(Input, Targets, LearningRate)`</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 166px;"></div><div class="CodeMirror-gutters" style="display: none; height: 196px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Input">Input<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Input">¶</a></h3>
<p>Implement the <code>get_inputs()</code> function to create TF Placeholders for the Neural Network.  It should create the following placeholders:</p>
<ul>
<li>Input text placeholder named "input" using the <a href="https://www.tensorflow.org/api_docs/python/tf/placeholder" target="_blank">TF Placeholder</a> <code>name</code> parameter.</li>
<li>Targets placeholder</li>
<li>Learning Rate placeholder</li>
</ul>
<p>Return the placeholders in the following tuple <code>(Input, Targets, LearningRate)</code></p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[9]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 624.531px; margin-bottom: 0px; border-right-width: 30px; min-height: 283px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_inputs</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Create TF Placeholders for input, targets, and learning rate.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tuple (input, targets, learning rate)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-builtin">input</span> = <span class="cm-variable">tf</span>.<span class="cm-property">placeholder</span>(<span class="cm-variable">tf</span>.<span class="cm-property">int32</span>, <span class="cm-variable">shape</span>=[<span class="cm-keyword">None</span>, <span class="cm-keyword">None</span>], <span class="cm-variable">name</span>=<span class="cm-string">"input"</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">targets</span> = <span class="cm-variable">tf</span>.<span class="cm-property">placeholder</span>(<span class="cm-variable">tf</span>.<span class="cm-property">int32</span>, <span class="cm-variable">shape</span>=[<span class="cm-keyword">None</span>, <span class="cm-keyword">None</span>], <span class="cm-variable">name</span>=<span class="cm-string">"targets"</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">learning_rate</span> = <span class="cm-variable">tf</span>.<span class="cm-property">placeholder</span>(<span class="cm-variable">tf</span>.<span class="cm-property">float32</span>, <span class="cm-variable">name</span>=<span class="cm-string">"learning_rate"</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-builtin">input</span>, <span class="cm-variable">targets</span>, <span class="cm-variable">learning_rate</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_get_inputs</span>(<span class="cm-variable">get_inputs</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 283px;"></div><div class="CodeMirror-gutters" style="display: none; height: 313px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 183px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Build RNN Cell and Initialize</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Stack one or more <span class="cm-link">[</span><span class="cm-link cm-comment">`BasicLSTMCells`</span><span class="cm-link">]</span><span class="cm-string cm-url">(https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/BasicLSTMCell)</span> in a <span class="cm-link">[</span><span class="cm-link cm-comment">`MultiRNNCell`</span><span class="cm-link">]</span><span class="cm-string cm-url">(https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/MultiRNNCell)</span>.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- The Rnn size should be set using </span><span class="cm-comment cm-variable-2">`rnn_size`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Initalize Cell State using the MultiRNNCell's </span><span class="cm-link cm-variable-2">[</span><span class="cm-link cm-comment cm-variable-2">`zero_state()`</span><span class="cm-link cm-variable-2">]</span><span class="cm-string cm-url cm-variable-2">(https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/MultiRNNCell#zero_state)</span><span class="cm-variable-2"> function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-variable-3">- Apply the name "initial_state" to the initial state using </span><span class="cm-link cm-variable-3">[</span><span class="cm-link cm-comment cm-variable-3">`tf.identity()`</span><span class="cm-link cm-variable-3">]</span><span class="cm-string cm-url cm-variable-3">(https://www.tensorflow.org/api_docs/python/tf/identity)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return the cell and initial state in the following tuple <span class="cm-comment">`(Cell, InitialState)`</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 183px;"></div><div class="CodeMirror-gutters" style="display: none; height: 213px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Build-RNN-Cell-and-Initialize">Build RNN Cell and Initialize<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Build-RNN-Cell-and-Initialize">¶</a></h3>
<p>Stack one or more <a href="https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/BasicLSTMCell" target="_blank"><code>BasicLSTMCells</code></a> in a <a href="https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/MultiRNNCell" target="_blank"><code>MultiRNNCell</code></a>.</p>
<ul>
<li>The Rnn size should be set using <code>rnn_size</code></li>
<li>Initalize Cell State using the MultiRNNCell's <a href="https://www.tensorflow.org/api_docs/python/tf/contrib/rnn/MultiRNNCell#zero_state" target="_blank"><code>zero_state()</code></a> function<ul>
<li>Apply the name "initial_state" to the initial state using <a href="https://www.tensorflow.org/api_docs/python/tf/identity" target="_blank"><code>tf.identity()</code></a></li>
</ul>
</li>
</ul>
<p>Return the cell and initial state in the following tuple <code>(Cell, InitialState)</code></p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[21]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 158.594px; left: 433.938px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 532.188px; margin-bottom: 0px; border-right-width: 30px; min-height: 334px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 428.344px; top: 153px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_init_cell</span>(<span class="cm-variable">batch_size</span>, <span class="cm-variable">rnn_size</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Create an RNN Cell and initialize it.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param batch_size: Size of batches</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param rnn_size: Size of RNNs</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tuple (cell, initialize state)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">lstm_1</span> = <span class="cm-variable">tf</span>.<span class="cm-property">contrib</span>.<span class="cm-property">rnn</span>.<span class="cm-property">BasicLSTMCell</span>(<span class="cm-variable">rnn_size</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">cell</span> = <span class="cm-variable">tf</span>.<span class="cm-property">contrib</span>.<span class="cm-property">rnn</span>.<span class="cm-property">MultiRNNCell</span>([<span class="cm-variable">lstm_1</span>] <span class="cm-operator">*</span> <span class="cm-number">2</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">initial_state</span> = <span class="cm-variable">cell</span>.<span class="cm-property">zero_state</span>(<span class="cm-variable">batch_size</span>, <span class="cm-variable">tf</span>.<span class="cm-property">float32</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">initial_state</span> = <span class="cm-variable">tf</span>.<span class="cm-property">identity</span>(<span class="cm-variable">initial_state</span>, <span class="cm-string">"initial_state"</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">cell</span>, <span class="cm-variable">initial_state</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_get_init_cell</span>(<span class="cm-variable">get_init_cell</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 334px;"></div><div class="CodeMirror-gutters" style="display: none; height: 364px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 47px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Word Embedding</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Apply embedding to <span class="cm-comment">`input_data`</span> using TensorFlow.  Return the embedded sequence.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 47px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Word-Embedding">Word Embedding<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Word-Embedding">¶</a></h3>
<p>Apply embedding to <code>input_data</code> using TensorFlow.  Return the embedded sequence.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[22]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 565.844px; margin-bottom: 0px; border-right-width: 30px; min-height: 317px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_embed</span>(<span class="cm-variable">input_data</span>, <span class="cm-variable">vocab_size</span>, <span class="cm-variable">embed_dim</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Create embedding for &lt;input_data&gt;.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param input_data: TF placeholder for text input.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param vocab_size: Number of words in vocabulary.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param embed_dim: Number of embedding dimensions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Embedded input.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">tf</span>.<span class="cm-property">contrib</span>.<span class="cm-property">layers</span>.<span class="cm-property">embed_sequence</span>(<span class="cm-variable">input_data</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                            <span class="cm-variable">vocab_size</span>=<span class="cm-variable">vocab_size</span>, </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                                            <span class="cm-variable">embed_dim</span>=<span class="cm-variable">embed_dim</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_get_embed</span>(<span class="cm-variable">get_embed</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 317px;"></div><div class="CodeMirror-gutters" style="display: none; height: 347px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 132px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Build RNN</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">You created a RNN Cell in the <span class="cm-comment">`get_init_cell()`</span> function.  Time to use the cell to create a RNN.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Build the RNN using the </span><span class="cm-link cm-variable-2">[</span><span class="cm-link cm-comment cm-variable-2">`tf.nn.dynamic_rnn()`</span><span class="cm-link cm-variable-2">]</span><span class="cm-string cm-url cm-variable-2">(https://www.tensorflow.org/api_docs/python/tf/nn/dynamic_rnn)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> <span class="cm-variable-2">- Apply the name "final_state" to the final state using </span><span class="cm-link cm-variable-2">[</span><span class="cm-link cm-comment cm-variable-2">`tf.identity()`</span><span class="cm-link cm-variable-2">]</span><span class="cm-string cm-url cm-variable-2">(https://www.tensorflow.org/api_docs/python/tf/identity)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return the outputs and final_state state in the following tuple <span class="cm-comment">`(Outputs, FinalState)`</span> </span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 132px;"></div><div class="CodeMirror-gutters" style="display: none; height: 162px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Build-RNN">Build RNN<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Build-RNN">¶</a></h3>
<p>You created a RNN Cell in the <code>get_init_cell()</code> function.  Time to use the cell to create a RNN.</p>
<ul>
<li>Build the RNN using the <a href="https://www.tensorflow.org/api_docs/python/tf/nn/dynamic_rnn" target="_blank"><code>tf.nn.dynamic_rnn()</code></a><ul>
<li>Apply the name "final_state" to the final state using <a href="https://www.tensorflow.org/api_docs/python/tf/identity" target="_blank"><code>tf.identity()</code></a></li>
</ul>
</li>
</ul>
<p>Return the outputs and final_state state in the following tuple <code>(Outputs, FinalState)</code> </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[23]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 641.328px; margin-bottom: 0px; border-right-width: 30px; min-height: 300px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">build_rnn</span>(<span class="cm-variable">cell</span>, <span class="cm-variable">inputs</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Create a RNN using a RNN Cell</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param cell: RNN Cell</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param inputs: Input text data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tuple (Outputs, Final State)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">outputs</span>, <span class="cm-variable">final_state</span> = <span class="cm-variable">tf</span>.<span class="cm-property">nn</span>.<span class="cm-property">dynamic_rnn</span>(<span class="cm-variable">cell</span>, <span class="cm-variable">inputs</span>, <span class="cm-variable">dtype</span>=<span class="cm-variable">tf</span>.<span class="cm-property">float32</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">final_state</span> = <span class="cm-variable">tf</span>.<span class="cm-property">identity</span>(<span class="cm-variable">final_state</span>, <span class="cm-variable">name</span>=<span class="cm-string">'final_state'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">outputs</span>, <span class="cm-variable">final_state</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_build_rnn</span>(<span class="cm-variable">build_rnn</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 300px;"></div><div class="CodeMirror-gutters" style="display: none; height: 330px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 132px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Build the Neural Network</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Apply the functions you implemented above to:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Apply embedding to </span><span class="cm-comment cm-variable-2">`input_data`</span><span class="cm-variable-2"> using your </span><span class="cm-comment cm-variable-2">`get_embed(input_data, vocab_size, embed_dim)`</span><span class="cm-variable-2"> function.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Build RNN using </span><span class="cm-comment cm-variable-2">`cell`</span><span class="cm-variable-2"> and your </span><span class="cm-comment cm-variable-2">`build_rnn(cell, inputs)`</span><span class="cm-variable-2"> function.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Apply a fully connected layer with a linear activation and </span><span class="cm-comment cm-variable-2">`vocab_size`</span><span class="cm-variable-2"> as the number of outputs.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return the logits and final state in the following tuple (Logits, FinalState) </span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 132px;"></div><div class="CodeMirror-gutters" style="display: none; height: 162px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Build-the-Neural-Network">Build the Neural Network<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Build-the-Neural-Network">¶</a></h3>
<p>Apply the functions you implemented above to:</p>
<ul>
<li>Apply embedding to <code>input_data</code> using your <code>get_embed(input_data, vocab_size, embed_dim)</code> function.</li>
<li>Build RNN using <code>cell</code> and your <code>build_rnn(cell, inputs)</code> function.</li>
<li>Apply a fully connected layer with a linear activation and <code>vocab_size</code> as the number of outputs.</li>
</ul>
<p>Return the logits and final state in the following tuple (Logits, FinalState) </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[24]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 226.594px; left: 887.547px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 893.344px; margin-bottom: 0px; border-right-width: 30px; min-height: 368px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 881.953px; top: 221px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">build_nn</span>(<span class="cm-variable">cell</span>, <span class="cm-variable">rnn_size</span>, <span class="cm-variable">input_data</span>, <span class="cm-variable">vocab_size</span>, <span class="cm-variable">embed_dim</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Build part of the neural network</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param cell: RNN cell</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param rnn_size: Size of rnns</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param input_data: Input data</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param vocab_size: Vocabulary size</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param embed_dim: Number of embedding dimensions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tuple (Logits, FinalState)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">inputs</span> = <span class="cm-variable">get_embed</span>(<span class="cm-variable">input_data</span>, <span class="cm-variable">vocab_size</span>, <span class="cm-variable">embed_dim</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">outputs</span>, <span class="cm-variable">final_state</span> = <span class="cm-variable">build_rnn</span>(<span class="cm-variable">cell</span>, <span class="cm-variable">inputs</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">logits</span> = <span class="cm-variable">tf</span>.<span class="cm-property">contrib</span>.<span class="cm-property">layers</span>.<span class="cm-property">fully_connected</span>(<span class="cm-variable">inputs</span>=<span class="cm-variable">outputs</span>, <span class="cm-variable">num_outputs</span>=<span class="cm-variable">vocab_size</span>, <span class="cm-variable">activation_fn</span>=<span class="cm-keyword">None</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">logits</span>, <span class="cm-variable">final_state</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_build_nn</span>(<span class="cm-variable">build_nn</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 368px;"></div><div class="CodeMirror-gutters" style="display: none; height: 398px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 506px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Batches</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Implement <span class="cm-comment">`get_batches`</span> to create batches of input and targets using <span class="cm-comment">`int_text`</span>.  The batches should be a Numpy array with the shape <span class="cm-comment">`(number of batches, 2, batch size, sequence length)`</span>. Each batch contains two elements:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- The first element is a single batch of </span><span class="cm-strong cm-variable-2">**input**</span><span class="cm-variable-2"> with the shape </span><span class="cm-comment cm-variable-2">`[batch size, sequence length]`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- The second element is a single batch of </span><span class="cm-strong cm-variable-2">**targets**</span><span class="cm-variable-2"> with the shape </span><span class="cm-comment cm-variable-2">`[batch size, sequence length]`</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">If you can't fill the last batch with enough data, drop the last batch.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">For exmple, <span class="cm-comment">`get_batches([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 2, 3)`</span> would return a Numpy array of the following:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">[</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment"># First Batch</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">[</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># Batch of Input</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">[[ 1  2  3], [ 7  8  9]],</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># Batch of targets</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">[[ 2  3  4], [ 8  9 10]]</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">],</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment"># Second Batch</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">[</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># Batch of Input</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">[[ 4  5  6], [10 11 12]],</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment"># Batch of targets</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment">[[ 5  6  7], [11 12 13]]</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"> &nbsp;<span class="cm-comment">]</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">]</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment">```</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 506px;"></div><div class="CodeMirror-gutters" style="display: none; height: 536px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Batches">Batches<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Batches">¶</a></h3>
<p>Implement <code>get_batches</code> to create batches of input and targets using <code>int_text</code>.  The batches should be a Numpy array with the shape <code>(number of batches, 2, batch size, sequence length)</code>. Each batch contains two elements:</p>
<ul>
<li>The first element is a single batch of <strong>input</strong> with the shape <code>[batch size, sequence length]</code></li>
<li>The second element is a single batch of <strong>targets</strong> with the shape <code>[batch size, sequence length]</code></li>
</ul>
<p>If you can't fill the last batch with enough data, drop the last batch.</p>
<p>For exmple, <code>get_batches([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15], 2, 3)</code> would return a Numpy array of the following:</p>
<pre><code>[
  # First Batch
  [
    # Batch of Input
    [[ 1  2  3], [ 7  8  9]],
    # Batch of targets
    [[ 2  3  4], [ 8  9 10]]
  ],

  # Second Batch
  [
    # Batch of Input
    [[ 4  5  6], [10 11 12]],
    # Batch of targets
    [[ 5  6  7], [11 12 13]]
  ]
]
</code></pre></div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[46]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 311.594px; left: 324.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 523.875px; margin-bottom: 0px; border-right-width: 30px; min-height: 470px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 319px; top: 306px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_batches</span>(<span class="cm-variable">int_text</span>, <span class="cm-variable">batch_size</span>, <span class="cm-variable">seq_length</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Return batches of input and target</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param int_text: Text with the words replaced by their ids</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param batch_size: The size of batch</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param seq_length: The length of sequence</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Batches as a Numpy array</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">batches</span> = <span class="cm-builtin">int</span>(<span class="cm-builtin">len</span>(<span class="cm-variable">int_text</span>) <span class="cm-operator">/</span> (<span class="cm-variable">batch_size</span> <span class="cm-operator">*</span> <span class="cm-variable">seq_length</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">inputs_to_use</span> = <span class="cm-variable">batches</span> <span class="cm-operator">*</span> <span class="cm-variable">batch_size</span> <span class="cm-operator">*</span> <span class="cm-variable">seq_length</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">inputs</span> = <span class="cm-variable">np</span>.<span class="cm-property">array</span>(<span class="cm-variable">int_text</span>[<span class="cm-number">0</span> : <span class="cm-variable">inputs_to_use</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">inputs</span> = <span class="cm-variable">inputs</span>.<span class="cm-property">reshape</span>(<span class="cm-variable">batch_size</span>, <span class="cm-operator">-</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">inputs</span> = <span class="cm-variable">np</span>.<span class="cm-property">split</span>(<span class="cm-variable">inputs</span>, <span class="cm-variable">batches</span>, <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">targets</span> = <span class="cm-variable">np</span>.<span class="cm-property">array</span>(<span class="cm-variable">int_text</span>[<span class="cm-number">1</span> : <span class="cm-variable">inputs_to_use</span> <span class="cm-operator">+</span> <span class="cm-number">1</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">targets</span> = <span class="cm-variable">targets</span>.<span class="cm-property">reshape</span>(<span class="cm-variable">batch_size</span>, <span class="cm-operator">-</span><span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">targets</span> = <span class="cm-variable">np</span>.<span class="cm-property">split</span>(<span class="cm-variable">targets</span>, <span class="cm-variable">batches</span>, <span class="cm-number">1</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">np</span>.<span class="cm-property">asarray</span>(<span class="cm-builtin">list</span>(<span class="cm-builtin">zip</span>(<span class="cm-variable">inputs</span>, <span class="cm-variable">targets</span>)))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_get_batches</span>(<span class="cm-variable">get_batches</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 470px;"></div><div class="CodeMirror-gutters" style="display: none; height: 500px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 203px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Neural Network Training</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Hyperparameters</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Tune the following parameters:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`num_epochs`</span><span class="cm-variable-2"> to the number of epochs.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`batch_size`</span><span class="cm-variable-2"> to the batch size.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`rnn_size`</span><span class="cm-variable-2"> to the size of the RNNs.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`embed_dim`</span><span class="cm-variable-2"> to the size of the embedding.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`seq_length`</span><span class="cm-variable-2"> to the length of sequence.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`learning_rate`</span><span class="cm-variable-2"> to the learning rate.</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- Set </span><span class="cm-comment cm-variable-2">`show_every_n_batches`</span><span class="cm-variable-2"> to the number of batches the neural network should print progress.</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 203px;"></div><div class="CodeMirror-gutters" style="display: none; height: 233px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Neural-Network-Training">Neural Network Training<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Neural-Network-Training">¶</a></h2>
<h3 id="Hyperparameters">Hyperparameters<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Hyperparameters">¶</a></h3>
<p>Tune the following parameters:</p>
<ul>
<li>Set <code>num_epochs</code> to the number of epochs.</li>
<li>Set <code>batch_size</code> to the batch size.</li>
<li>Set <code>rnn_size</code> to the size of the RNNs.</li>
<li>Set <code>embed_dim</code> to the size of the embedding.</li>
<li>Set <code>seq_length</code> to the length of sequence.</li>
<li>Set <code>learning_rate</code> to the learning rate.</li>
<li>Set <code>show_every_n_batches</code> to the number of batches the neural network should print progress.</li>
</ul>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[49]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 56.5938px; left: 123.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 490px; margin-bottom: 0px; border-right-width: 30px; min-height: 334px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 118px; top: 51px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Number of Epochs</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">num_epochs</span> = <span class="cm-number">200</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Batch Size</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">batch_size</span> = <span class="cm-number">100</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># RNN Size</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">rnn_size</span> = <span class="cm-number">512</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Embedding Dimension Size</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">embed_dim</span> = <span class="cm-number">200</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Sequence Length</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">seq_length</span> = <span class="cm-number">30</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Learning Rate</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">learning_rate</span> = <span class="cm-number">0.01</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Show stats for every n number of batches</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">show_every_n_batches</span> = <span class="cm-number">10</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">save_dir</span> = <span class="cm-string">'./save'</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 334px;"></div><div class="CodeMirror-gutters" style="display: none; height: 364px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style="display: none;"></div><div class="output" style="display: none;"></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 47px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Build the Graph</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Build the graph using the neural network you implemented.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 47px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Build-the-Graph">Build the Graph<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Build-the-Graph">¶</a></h3>
<p>Build the graph using the neural network you implemented.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[50]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 430.594px; left: 165.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 926.875px; margin-bottom: 0px; border-right-width: 30px; min-height: 504px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors" style="visibility: hidden;"><div class="CodeMirror-cursor" style="left: 160px; top: 425px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">from</span> <span class="cm-variable">tensorflow</span>.<span class="cm-property">contrib</span> <span class="cm-keyword">import</span> <span class="cm-variable">seq2seq</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">train_graph</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">with</span> <span class="cm-variable">train_graph</span>.<span class="cm-property">as_default</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">vocab_size</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">int_to_vocab</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">input_text</span>, <span class="cm-variable">targets</span>, <span class="cm-variable">lr</span> = <span class="cm-variable">get_inputs</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">input_data_shape</span> = <span class="cm-variable">tf</span>.<span class="cm-property">shape</span>(<span class="cm-variable">input_text</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">cell</span>, <span class="cm-variable">initial_state</span> = <span class="cm-variable">get_init_cell</span>(<span class="cm-variable">input_data_shape</span>[<span class="cm-number">0</span>], <span class="cm-variable">rnn_size</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">logits</span>, <span class="cm-variable">final_state</span> = <span class="cm-variable">build_nn</span>(<span class="cm-variable">cell</span>, <span class="cm-variable">rnn_size</span>, <span class="cm-variable">input_text</span>, <span class="cm-variable">vocab_size</span>, <span class="cm-variable">embed_dim</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Probabilities for generating words</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">probs</span> = <span class="cm-variable">tf</span>.<span class="cm-property">nn</span>.<span class="cm-property">softmax</span>(<span class="cm-variable">logits</span>, <span class="cm-variable">name</span>=<span class="cm-string">'probs'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Loss function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">cost</span> = <span class="cm-variable">seq2seq</span>.<span class="cm-property">sequence_loss</span>(</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">logits</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">targets</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">tf</span>.<span class="cm-property">ones</span>([<span class="cm-variable">input_data_shape</span>[<span class="cm-number">0</span>], <span class="cm-variable">input_data_shape</span>[<span class="cm-number">1</span>]]))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Optimizer</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">optimizer</span> = <span class="cm-variable">tf</span>.<span class="cm-property">train</span>.<span class="cm-property">AdamOptimizer</span>(<span class="cm-variable">lr</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Gradient Clipping</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">gradients</span> = <span class="cm-variable">optimizer</span>.<span class="cm-property">compute_gradients</span>(<span class="cm-variable">cost</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">capped_gradients</span> = [(<span class="cm-variable">tf</span>.<span class="cm-property">clip_by_value</span>(<span class="cm-variable">grad</span>, <span class="cm-operator">-</span><span class="cm-number">1.</span>, <span class="cm-number">1.</span>), <span class="cm-variable">var</span>) <span class="cm-keyword">for</span> <span class="cm-variable">grad</span>, <span class="cm-variable">var</span> <span class="cm-keyword">in</span> <span class="cm-variable">gradients</span> <span class="cm-keyword">if</span> <span class="cm-variable">grad</span> <span class="cm-keyword">is</span> <span class="cm-keyword">not</span> <span class="cm-keyword">None</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">train_op</span> = <span class="cm-variable">optimizer</span>.<span class="cm-property">apply_gradients</span>(<span class="cm-variable">capped_gradients</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 504px;"></div><div class="CodeMirror-gutters" style="display: none; height: 534px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 65px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Train</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Train the neural network on the preprocessed data.  If you have a hard time getting a good loss, check the <span class="cm-link">[forms]</span><span class="cm-string cm-url">(https://discussions.udacity.com/)</span> to see if anyone is having the same problem.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 65px;"></div><div class="CodeMirror-gutters" style="display: none; height: 95px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Train">Train<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Train">¶</a></h2>
<p>Train the neural network on the preprocessed data.  If you have a hard time getting a good loss, check the <a href="https://discussions.udacity.com/" target="_blank">forms</a> to see if anyone is having the same problem.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[51]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 481.594px; left: 215.594px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 674.969px; margin-bottom: 0px; border-right-width: 30px; min-height: 538px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 210px; top: 476px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">batches</span> = <span class="cm-variable">get_batches</span>(<span class="cm-variable">int_text</span>, <span class="cm-variable">batch_size</span>, <span class="cm-variable">seq_length</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">with</span> <span class="cm-variable">tf</span>.<span class="cm-property">Session</span>(<span class="cm-variable">graph</span>=<span class="cm-variable">train_graph</span>) <span class="cm-keyword">as</span> <span class="cm-variable">sess</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">sess</span>.<span class="cm-property">run</span>(<span class="cm-variable">tf</span>.<span class="cm-property">global_variables_initializer</span>())</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">for</span> <span class="cm-variable">epoch_i</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">num_epochs</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">state</span> = <span class="cm-variable">sess</span>.<span class="cm-property">run</span>(<span class="cm-variable">initial_state</span>, {<span class="cm-variable">input_text</span>: <span class="cm-variable">batches</span>[<span class="cm-number">0</span>][<span class="cm-number">0</span>]})</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-keyword">for</span> <span class="cm-variable">batch_i</span>, (<span class="cm-variable">x</span>, <span class="cm-variable">y</span>) <span class="cm-keyword">in</span> <span class="cm-builtin">enumerate</span>(<span class="cm-variable">batches</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">feed</span> = {</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                <span class="cm-variable">input_text</span>: <span class="cm-variable">x</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                <span class="cm-variable">targets</span>: <span class="cm-variable">y</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                <span class="cm-variable">initial_state</span>: <span class="cm-variable">state</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                <span class="cm-variable">lr</span>: <span class="cm-variable">learning_rate</span>}</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-variable">train_loss</span>, <span class="cm-variable">state</span>, <span class="cm-variable">_</span> = <span class="cm-variable">sess</span>.<span class="cm-property">run</span>([<span class="cm-variable">cost</span>, <span class="cm-variable">final_state</span>, <span class="cm-variable">train_op</span>], <span class="cm-variable">feed</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-comment"># Show every &lt;show_every_n_batches&gt; batches</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            <span class="cm-keyword">if</span> (<span class="cm-variable">epoch_i</span> <span class="cm-operator">*</span> <span class="cm-builtin">len</span>(<span class="cm-variable">batches</span>) <span class="cm-operator">+</span> <span class="cm-variable">batch_i</span>) <span class="cm-operator">%</span> <span class="cm-variable">show_every_n_batches</span> == <span class="cm-number">0</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                <span class="cm-builtin">print</span>(<span class="cm-string">'Epoch {:&gt;3} Batch {:&gt;4}/{}   train_loss = {:.3f}'</span>.<span class="cm-property">format</span>(</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                    <span class="cm-variable">epoch_i</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                    <span class="cm-variable">batch_i</span>,</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                    <span class="cm-builtin">len</span>(<span class="cm-variable">batches</span>),</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">                    <span class="cm-variable">train_loss</span>))</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Save Model</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">saver</span> = <span class="cm-variable">tf</span>.<span class="cm-property">train</span>.<span class="cm-property">Saver</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">saver</span>.<span class="cm-property">save</span>(<span class="cm-variable">sess</span>, <span class="cm-variable">save_dir</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-builtin">print</span>(<span class="cm-string">'Model Trained and Saved'</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 538px;"></div><div class="CodeMirror-gutters" style="display: none; height: 568px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to unscroll output; double click to hide" style=""></div><div class="output output_scroll" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Epoch   0 Batch    0/23   train_loss = 8.822
Epoch   0 Batch   10/23   train_loss = 6.971
Epoch   0 Batch   20/23   train_loss = 7.064
Epoch   1 Batch    7/23   train_loss = 6.358
Epoch   1 Batch   17/23   train_loss = 6.249
Epoch   2 Batch    4/23   train_loss = 6.251
Epoch   2 Batch   14/23   train_loss = 6.179
Epoch   3 Batch    1/23   train_loss = 6.269
Epoch   3 Batch   11/23   train_loss = 6.294
Epoch   3 Batch   21/23   train_loss = 6.024
Epoch   4 Batch    8/23   train_loss = 5.958
Epoch   4 Batch   18/23   train_loss = 5.904
Epoch   5 Batch    5/23   train_loss = 5.829
Epoch   5 Batch   15/23   train_loss = 5.614
Epoch   6 Batch    2/23   train_loss = 5.257
Epoch   6 Batch   12/23   train_loss = 5.075
Epoch   6 Batch   22/23   train_loss = 5.024
Epoch   7 Batch    9/23   train_loss = 4.784
Epoch   7 Batch   19/23   train_loss = 4.811
Epoch   8 Batch    6/23   train_loss = 4.776
Epoch   8 Batch   16/23   train_loss = 4.764
Epoch   9 Batch    3/23   train_loss = 4.692
Epoch   9 Batch   13/23   train_loss = 4.634
Epoch  10 Batch    0/23   train_loss = 4.538
Epoch  10 Batch   10/23   train_loss = 4.515
Epoch  10 Batch   20/23   train_loss = 4.442
Epoch  11 Batch    7/23   train_loss = 4.415
Epoch  11 Batch   17/23   train_loss = 4.248
Epoch  12 Batch    4/23   train_loss = 4.302
Epoch  12 Batch   14/23   train_loss = 4.294
Epoch  13 Batch    1/23   train_loss = 4.212
Epoch  13 Batch   11/23   train_loss = 4.309
Epoch  13 Batch   21/23   train_loss = 4.155
Epoch  14 Batch    8/23   train_loss = 4.069
Epoch  14 Batch   18/23   train_loss = 4.157
Epoch  15 Batch    5/23   train_loss = 4.123
Epoch  15 Batch   15/23   train_loss = 3.996
Epoch  16 Batch    2/23   train_loss = 4.077
Epoch  16 Batch   12/23   train_loss = 3.963
Epoch  16 Batch   22/23   train_loss = 4.010
Epoch  17 Batch    9/23   train_loss = 3.853
Epoch  17 Batch   19/23   train_loss = 3.887
Epoch  18 Batch    6/23   train_loss = 3.934
Epoch  18 Batch   16/23   train_loss = 3.796
Epoch  19 Batch    3/23   train_loss = 3.865
Epoch  19 Batch   13/23   train_loss = 3.761
Epoch  20 Batch    0/23   train_loss = 3.753
Epoch  20 Batch   10/23   train_loss = 3.739
Epoch  20 Batch   20/23   train_loss = 3.591
Epoch  21 Batch    7/23   train_loss = 3.690
Epoch  21 Batch   17/23   train_loss = 3.410
Epoch  22 Batch    4/23   train_loss = 3.461
Epoch  22 Batch   14/23   train_loss = 3.589
Epoch  23 Batch    1/23   train_loss = 3.496
Epoch  23 Batch   11/23   train_loss = 3.469
Epoch  23 Batch   21/23   train_loss = 3.420
Epoch  24 Batch    8/23   train_loss = 3.333
Epoch  24 Batch   18/23   train_loss = 3.325
Epoch  25 Batch    5/23   train_loss = 3.343
Epoch  25 Batch   15/23   train_loss = 3.233
Epoch  26 Batch    2/23   train_loss = 3.314
Epoch  26 Batch   12/23   train_loss = 3.114
Epoch  26 Batch   22/23   train_loss = 3.171
Epoch  27 Batch    9/23   train_loss = 3.102
Epoch  27 Batch   19/23   train_loss = 3.037
Epoch  28 Batch    6/23   train_loss = 3.086
Epoch  28 Batch   16/23   train_loss = 2.959
Epoch  29 Batch    3/23   train_loss = 3.025
Epoch  29 Batch   13/23   train_loss = 2.961
Epoch  30 Batch    0/23   train_loss = 3.017
Epoch  30 Batch   10/23   train_loss = 3.037
Epoch  30 Batch   20/23   train_loss = 2.742
Epoch  31 Batch    7/23   train_loss = 2.931
Epoch  31 Batch   17/23   train_loss = 2.636
Epoch  32 Batch    4/23   train_loss = 2.701
Epoch  32 Batch   14/23   train_loss = 2.859
Epoch  33 Batch    1/23   train_loss = 2.727
Epoch  33 Batch   11/23   train_loss = 2.702
Epoch  33 Batch   21/23   train_loss = 2.664
Epoch  34 Batch    8/23   train_loss = 2.570
Epoch  34 Batch   18/23   train_loss = 2.487
Epoch  35 Batch    5/23   train_loss = 2.578
Epoch  35 Batch   15/23   train_loss = 2.402
Epoch  36 Batch    2/23   train_loss = 2.482
Epoch  36 Batch   12/23   train_loss = 2.330
Epoch  36 Batch   22/23   train_loss = 2.401
Epoch  37 Batch    9/23   train_loss = 2.338
Epoch  37 Batch   19/23   train_loss = 2.314
Epoch  38 Batch    6/23   train_loss = 2.329
Epoch  38 Batch   16/23   train_loss = 2.198
Epoch  39 Batch    3/23   train_loss = 2.297
Epoch  39 Batch   13/23   train_loss = 2.303
Epoch  40 Batch    0/23   train_loss = 2.321
Epoch  40 Batch   10/23   train_loss = 2.394
Epoch  40 Batch   20/23   train_loss = 2.140
Epoch  41 Batch    7/23   train_loss = 2.290
Epoch  41 Batch   17/23   train_loss = 2.071
Epoch  42 Batch    4/23   train_loss = 2.091
Epoch  42 Batch   14/23   train_loss = 2.257
Epoch  43 Batch    1/23   train_loss = 2.096
Epoch  43 Batch   11/23   train_loss = 2.111
Epoch  43 Batch   21/23   train_loss = 2.099
Epoch  44 Batch    8/23   train_loss = 1.964
Epoch  44 Batch   18/23   train_loss = 1.887
Epoch  45 Batch    5/23   train_loss = 1.978
Epoch  45 Batch   15/23   train_loss = 1.828
Epoch  46 Batch    2/23   train_loss = 1.883
Epoch  46 Batch   12/23   train_loss = 1.792
Epoch  46 Batch   22/23   train_loss = 1.824
Epoch  47 Batch    9/23   train_loss = 1.806
Epoch  47 Batch   19/23   train_loss = 1.799
Epoch  48 Batch    6/23   train_loss = 1.736
Epoch  48 Batch   16/23   train_loss = 1.663
Epoch  49 Batch    3/23   train_loss = 1.725
Epoch  49 Batch   13/23   train_loss = 1.721
Epoch  50 Batch    0/23   train_loss = 1.796
Epoch  50 Batch   10/23   train_loss = 1.840
Epoch  50 Batch   20/23   train_loss = 1.538
Epoch  51 Batch    7/23   train_loss = 1.686
Epoch  51 Batch   17/23   train_loss = 1.465
Epoch  52 Batch    4/23   train_loss = 1.539
Epoch  52 Batch   14/23   train_loss = 1.699
Epoch  53 Batch    1/23   train_loss = 1.572
Epoch  53 Batch   11/23   train_loss = 1.600
Epoch  53 Batch   21/23   train_loss = 1.581
Epoch  54 Batch    8/23   train_loss = 1.500
Epoch  54 Batch   18/23   train_loss = 1.395
Epoch  55 Batch    5/23   train_loss = 1.524
Epoch  55 Batch   15/23   train_loss = 1.377
Epoch  56 Batch    2/23   train_loss = 1.482
Epoch  56 Batch   12/23   train_loss = 1.339
Epoch  56 Batch   22/23   train_loss = 1.405
Epoch  57 Batch    9/23   train_loss = 1.428
Epoch  57 Batch   19/23   train_loss = 1.362
Epoch  58 Batch    6/23   train_loss = 1.361
Epoch  58 Batch   16/23   train_loss = 1.264
Epoch  59 Batch    3/23   train_loss = 1.343
Epoch  59 Batch   13/23   train_loss = 1.304
Epoch  60 Batch    0/23   train_loss = 1.367
Epoch  60 Batch   10/23   train_loss = 1.488
Epoch  60 Batch   20/23   train_loss = 1.203
Epoch  61 Batch    7/23   train_loss = 1.369
Epoch  61 Batch   17/23   train_loss = 1.169
Epoch  62 Batch    4/23   train_loss = 1.246
Epoch  62 Batch   14/23   train_loss = 1.345
Epoch  63 Batch    1/23   train_loss = 1.213
Epoch  63 Batch   11/23   train_loss = 1.247
Epoch  63 Batch   21/23   train_loss = 1.208
Epoch  64 Batch    8/23   train_loss = 1.226
Epoch  64 Batch   18/23   train_loss = 1.113
Epoch  65 Batch    5/23   train_loss = 1.228
Epoch  65 Batch   15/23   train_loss = 1.067
Epoch  66 Batch    2/23   train_loss = 1.157
Epoch  66 Batch   12/23   train_loss = 1.071
Epoch  66 Batch   22/23   train_loss = 1.110
Epoch  67 Batch    9/23   train_loss = 1.139
Epoch  67 Batch   19/23   train_loss = 1.112
Epoch  68 Batch    6/23   train_loss = 0.995
Epoch  68 Batch   16/23   train_loss = 0.983
Epoch  69 Batch    3/23   train_loss = 0.966
Epoch  69 Batch   13/23   train_loss = 0.997
Epoch  70 Batch    0/23   train_loss = 1.020
Epoch  70 Batch   10/23   train_loss = 1.078
Epoch  70 Batch   20/23   train_loss = 0.886
Epoch  71 Batch    7/23   train_loss = 0.984
Epoch  71 Batch   17/23   train_loss = 0.838
Epoch  72 Batch    4/23   train_loss = 0.860
Epoch  72 Batch   14/23   train_loss = 0.996
Epoch  73 Batch    1/23   train_loss = 0.870
Epoch  73 Batch   11/23   train_loss = 0.895
Epoch  73 Batch   21/23   train_loss = 0.920
Epoch  74 Batch    8/23   train_loss = 0.884
Epoch  74 Batch   18/23   train_loss = 0.787
Epoch  75 Batch    5/23   train_loss = 0.883
Epoch  75 Batch   15/23   train_loss = 0.723
Epoch  76 Batch    2/23   train_loss = 0.848
Epoch  76 Batch   12/23   train_loss = 0.750
Epoch  76 Batch   22/23   train_loss = 0.806
Epoch  77 Batch    9/23   train_loss = 0.841
Epoch  77 Batch   19/23   train_loss = 0.779
Epoch  78 Batch    6/23   train_loss = 0.724
Epoch  78 Batch   16/23   train_loss = 0.706
Epoch  79 Batch    3/23   train_loss = 0.706
Epoch  79 Batch   13/23   train_loss = 0.692
Epoch  80 Batch    0/23   train_loss = 0.731
Epoch  80 Batch   10/23   train_loss = 0.778
Epoch  80 Batch   20/23   train_loss = 0.639
Epoch  81 Batch    7/23   train_loss = 0.684
Epoch  81 Batch   17/23   train_loss = 0.603
Epoch  82 Batch    4/23   train_loss = 0.627
Epoch  82 Batch   14/23   train_loss = 0.754
Epoch  83 Batch    1/23   train_loss = 0.616
Epoch  83 Batch   11/23   train_loss = 0.653
Epoch  83 Batch   21/23   train_loss = 0.618
Epoch  84 Batch    8/23   train_loss = 0.604
Epoch  84 Batch   18/23   train_loss = 0.533
Epoch  85 Batch    5/23   train_loss = 0.623
Epoch  85 Batch   15/23   train_loss = 0.532
Epoch  86 Batch    2/23   train_loss = 0.571
Epoch  86 Batch   12/23   train_loss = 0.513
Epoch  86 Batch   22/23   train_loss = 0.545
Epoch  87 Batch    9/23   train_loss = 0.584
Epoch  87 Batch   19/23   train_loss = 0.542
Epoch  88 Batch    6/23   train_loss = 0.513
Epoch  88 Batch   16/23   train_loss = 0.481
Epoch  89 Batch    3/23   train_loss = 0.502
Epoch  89 Batch   13/23   train_loss = 0.493
Epoch  90 Batch    0/23   train_loss = 0.513
Epoch  90 Batch   10/23   train_loss = 0.557
Epoch  90 Batch   20/23   train_loss = 0.458
Epoch  91 Batch    7/23   train_loss = 0.503
Epoch  91 Batch   17/23   train_loss = 0.451
Epoch  92 Batch    4/23   train_loss = 0.453
Epoch  92 Batch   14/23   train_loss = 0.520
Epoch  93 Batch    1/23   train_loss = 0.450
Epoch  93 Batch   11/23   train_loss = 0.452
Epoch  93 Batch   21/23   train_loss = 0.487
Epoch  94 Batch    8/23   train_loss = 0.488
Epoch  94 Batch   18/23   train_loss = 0.417
Epoch  95 Batch    5/23   train_loss = 0.468
Epoch  95 Batch   15/23   train_loss = 0.380
Epoch  96 Batch    2/23   train_loss = 0.452
Epoch  96 Batch   12/23   train_loss = 0.384
Epoch  96 Batch   22/23   train_loss = 0.453
Epoch  97 Batch    9/23   train_loss = 0.446
Epoch  97 Batch   19/23   train_loss = 0.435
Epoch  98 Batch    6/23   train_loss = 0.388
Epoch  98 Batch   16/23   train_loss = 0.374
Epoch  99 Batch    3/23   train_loss = 0.383
Epoch  99 Batch   13/23   train_loss = 0.399
Epoch 100 Batch    0/23   train_loss = 0.415
Epoch 100 Batch   10/23   train_loss = 0.430
Epoch 100 Batch   20/23   train_loss = 0.340
Epoch 101 Batch    7/23   train_loss = 0.373
Epoch 101 Batch   17/23   train_loss = 0.337
Epoch 102 Batch    4/23   train_loss = 0.368
Epoch 102 Batch   14/23   train_loss = 0.394
Epoch 103 Batch    1/23   train_loss = 0.320
Epoch 103 Batch   11/23   train_loss = 0.333
Epoch 103 Batch   21/23   train_loss = 0.337
Epoch 104 Batch    8/23   train_loss = 0.312
Epoch 104 Batch   18/23   train_loss = 0.277
Epoch 105 Batch    5/23   train_loss = 0.326
Epoch 105 Batch   15/23   train_loss = 0.254
Epoch 106 Batch    2/23   train_loss = 0.296
Epoch 106 Batch   12/23   train_loss = 0.254
Epoch 106 Batch   22/23   train_loss = 0.266
Epoch 107 Batch    9/23   train_loss = 0.270
Epoch 107 Batch   19/23   train_loss = 0.254
Epoch 108 Batch    6/23   train_loss = 0.230
Epoch 108 Batch   16/23   train_loss = 0.222
Epoch 109 Batch    3/23   train_loss = 0.222
Epoch 109 Batch   13/23   train_loss = 0.224
Epoch 110 Batch    0/23   train_loss = 0.225
Epoch 110 Batch   10/23   train_loss = 0.233
Epoch 110 Batch   20/23   train_loss = 0.185
Epoch 111 Batch    7/23   train_loss = 0.203
Epoch 111 Batch   17/23   train_loss = 0.182
Epoch 112 Batch    4/23   train_loss = 0.186
Epoch 112 Batch   14/23   train_loss = 0.211
Epoch 113 Batch    1/23   train_loss = 0.168
Epoch 113 Batch   11/23   train_loss = 0.186
Epoch 113 Batch   21/23   train_loss = 0.180
Epoch 114 Batch    8/23   train_loss = 0.166
Epoch 114 Batch   18/23   train_loss = 0.153
Epoch 115 Batch    5/23   train_loss = 0.187
Epoch 115 Batch   15/23   train_loss = 0.148
Epoch 116 Batch    2/23   train_loss = 0.165
Epoch 116 Batch   12/23   train_loss = 0.146
Epoch 116 Batch   22/23   train_loss = 0.159
Epoch 117 Batch    9/23   train_loss = 0.168
Epoch 117 Batch   19/23   train_loss = 0.161
Epoch 118 Batch    6/23   train_loss = 0.137
Epoch 118 Batch   16/23   train_loss = 0.134
Epoch 119 Batch    3/23   train_loss = 0.147
Epoch 119 Batch   13/23   train_loss = 0.145
Epoch 120 Batch    0/23   train_loss = 0.150
Epoch 120 Batch   10/23   train_loss = 0.158
Epoch 120 Batch   20/23   train_loss = 0.123
Epoch 121 Batch    7/23   train_loss = 0.138
Epoch 121 Batch   17/23   train_loss = 0.124
Epoch 122 Batch    4/23   train_loss = 0.133
Epoch 122 Batch   14/23   train_loss = 0.151
Epoch 123 Batch    1/23   train_loss = 0.127
Epoch 123 Batch   11/23   train_loss = 0.138
Epoch 123 Batch   21/23   train_loss = 0.137
Epoch 124 Batch    8/23   train_loss = 0.127
Epoch 124 Batch   18/23   train_loss = 0.119
Epoch 125 Batch    5/23   train_loss = 0.145
Epoch 125 Batch   15/23   train_loss = 0.119
Epoch 126 Batch    2/23   train_loss = 0.124
Epoch 126 Batch   12/23   train_loss = 0.120
Epoch 126 Batch   22/23   train_loss = 0.132
Epoch 127 Batch    9/23   train_loss = 0.139
Epoch 127 Batch   19/23   train_loss = 0.130
Epoch 128 Batch    6/23   train_loss = 0.112
Epoch 128 Batch   16/23   train_loss = 0.112
Epoch 129 Batch    3/23   train_loss = 0.136
Epoch 129 Batch   13/23   train_loss = 0.134
Epoch 130 Batch    0/23   train_loss = 0.135
Epoch 130 Batch   10/23   train_loss = 0.138
Epoch 130 Batch   20/23   train_loss = 0.104
Epoch 131 Batch    7/23   train_loss = 0.127
Epoch 131 Batch   17/23   train_loss = 0.117
Epoch 132 Batch    4/23   train_loss = 0.121
Epoch 132 Batch   14/23   train_loss = 0.132
Epoch 133 Batch    1/23   train_loss = 0.114
Epoch 133 Batch   11/23   train_loss = 0.126
Epoch 133 Batch   21/23   train_loss = 0.125
Epoch 134 Batch    8/23   train_loss = 0.118
Epoch 134 Batch   18/23   train_loss = 0.106
Epoch 135 Batch    5/23   train_loss = 0.133
Epoch 135 Batch   15/23   train_loss = 0.112
Epoch 136 Batch    2/23   train_loss = 0.121
Epoch 136 Batch   12/23   train_loss = 0.109
Epoch 136 Batch   22/23   train_loss = 0.117
Epoch 137 Batch    9/23   train_loss = 0.123
Epoch 137 Batch   19/23   train_loss = 0.125
Epoch 138 Batch    6/23   train_loss = 0.105
Epoch 138 Batch   16/23   train_loss = 0.105
Epoch 139 Batch    3/23   train_loss = 0.127
Epoch 139 Batch   13/23   train_loss = 0.115
Epoch 140 Batch    0/23   train_loss = 0.120
Epoch 140 Batch   10/23   train_loss = 0.129
Epoch 140 Batch   20/23   train_loss = 0.098
Epoch 141 Batch    7/23   train_loss = 0.111
Epoch 141 Batch   17/23   train_loss = 0.101
Epoch 142 Batch    4/23   train_loss = 0.110
Epoch 142 Batch   14/23   train_loss = 0.117
Epoch 143 Batch    1/23   train_loss = 0.100
Epoch 143 Batch   11/23   train_loss = 0.112
Epoch 143 Batch   21/23   train_loss = 0.109
Epoch 144 Batch    8/23   train_loss = 0.103
Epoch 144 Batch   18/23   train_loss = 0.095
Epoch 145 Batch    5/23   train_loss = 0.116
Epoch 145 Batch   15/23   train_loss = 0.099
Epoch 146 Batch    2/23   train_loss = 0.099
Epoch 146 Batch   12/23   train_loss = 0.097
Epoch 146 Batch   22/23   train_loss = 0.102
Epoch 147 Batch    9/23   train_loss = 0.103
Epoch 147 Batch   19/23   train_loss = 0.102
Epoch 148 Batch    6/23   train_loss = 0.092
Epoch 148 Batch   16/23   train_loss = 0.092
Epoch 149 Batch    3/23   train_loss = 0.109
Epoch 149 Batch   13/23   train_loss = 0.100
Epoch 150 Batch    0/23   train_loss = 0.105
Epoch 150 Batch   10/23   train_loss = 0.115
Epoch 150 Batch   20/23   train_loss = 0.086
Epoch 151 Batch    7/23   train_loss = 0.098
Epoch 151 Batch   17/23   train_loss = 0.089
Epoch 152 Batch    4/23   train_loss = 0.099
Epoch 152 Batch   14/23   train_loss = 0.106
Epoch 153 Batch    1/23   train_loss = 0.095
Epoch 153 Batch   11/23   train_loss = 0.105
Epoch 153 Batch   21/23   train_loss = 0.101
Epoch 154 Batch    8/23   train_loss = 0.096
Epoch 154 Batch   18/23   train_loss = 0.088
Epoch 155 Batch    5/23   train_loss = 0.107
Epoch 155 Batch   15/23   train_loss = 0.094
Epoch 156 Batch    2/23   train_loss = 0.093
Epoch 156 Batch   12/23   train_loss = 0.091
Epoch 156 Batch   22/23   train_loss = 0.095
Epoch 157 Batch    9/23   train_loss = 0.096
Epoch 157 Batch   19/23   train_loss = 0.098
Epoch 158 Batch    6/23   train_loss = 0.088
Epoch 158 Batch   16/23   train_loss = 0.087
Epoch 159 Batch    3/23   train_loss = 0.105
Epoch 159 Batch   13/23   train_loss = 0.096
Epoch 160 Batch    0/23   train_loss = 0.101
Epoch 160 Batch   10/23   train_loss = 0.111
Epoch 160 Batch   20/23   train_loss = 0.084
Epoch 161 Batch    7/23   train_loss = 0.096
Epoch 161 Batch   17/23   train_loss = 0.086
Epoch 162 Batch    4/23   train_loss = 0.096
Epoch 162 Batch   14/23   train_loss = 0.103
Epoch 163 Batch    1/23   train_loss = 0.091
Epoch 163 Batch   11/23   train_loss = 0.103
Epoch 163 Batch   21/23   train_loss = 0.099
Epoch 164 Batch    8/23   train_loss = 0.094
Epoch 164 Batch   18/23   train_loss = 0.086
Epoch 165 Batch    5/23   train_loss = 0.105
Epoch 165 Batch   15/23   train_loss = 0.092
Epoch 166 Batch    2/23   train_loss = 0.092
Epoch 166 Batch   12/23   train_loss = 0.090
Epoch 166 Batch   22/23   train_loss = 0.093
Epoch 167 Batch    9/23   train_loss = 0.094
Epoch 167 Batch   19/23   train_loss = 0.096
Epoch 168 Batch    6/23   train_loss = 0.086
Epoch 168 Batch   16/23   train_loss = 0.086
Epoch 169 Batch    3/23   train_loss = 0.103
Epoch 169 Batch   13/23   train_loss = 0.095
Epoch 170 Batch    0/23   train_loss = 0.100
Epoch 170 Batch   10/23   train_loss = 0.110
Epoch 170 Batch   20/23   train_loss = 0.082
Epoch 171 Batch    7/23   train_loss = 0.094
Epoch 171 Batch   17/23   train_loss = 0.085
Epoch 172 Batch    4/23   train_loss = 0.095
Epoch 172 Batch   14/23   train_loss = 0.101
Epoch 173 Batch    1/23   train_loss = 0.090
Epoch 173 Batch   11/23   train_loss = 0.101
Epoch 173 Batch   21/23   train_loss = 0.098
Epoch 174 Batch    8/23   train_loss = 0.092
Epoch 174 Batch   18/23   train_loss = 0.085
Epoch 175 Batch    5/23   train_loss = 0.104
Epoch 175 Batch   15/23   train_loss = 0.091
Epoch 176 Batch    2/23   train_loss = 0.090
Epoch 176 Batch   12/23   train_loss = 0.089
Epoch 176 Batch   22/23   train_loss = 0.092
Epoch 177 Batch    9/23   train_loss = 0.092
Epoch 177 Batch   19/23   train_loss = 0.095
Epoch 178 Batch    6/23   train_loss = 0.086
Epoch 178 Batch   16/23   train_loss = 0.084
Epoch 179 Batch    3/23   train_loss = 0.103
Epoch 179 Batch   13/23   train_loss = 0.094
Epoch 180 Batch    0/23   train_loss = 0.100
Epoch 180 Batch   10/23   train_loss = 0.109
Epoch 180 Batch   20/23   train_loss = 0.081
Epoch 181 Batch    7/23   train_loss = 0.093
Epoch 181 Batch   17/23   train_loss = 0.084
Epoch 182 Batch    4/23   train_loss = 0.094
Epoch 182 Batch   14/23   train_loss = 0.100
Epoch 183 Batch    1/23   train_loss = 0.089
Epoch 183 Batch   11/23   train_loss = 0.101
Epoch 183 Batch   21/23   train_loss = 0.098
Epoch 184 Batch    8/23   train_loss = 0.092
Epoch 184 Batch   18/23   train_loss = 0.084
Epoch 185 Batch    5/23   train_loss = 0.103
Epoch 185 Batch   15/23   train_loss = 0.090
Epoch 186 Batch    2/23   train_loss = 0.090
Epoch 186 Batch   12/23   train_loss = 0.088
Epoch 186 Batch   22/23   train_loss = 0.091
Epoch 187 Batch    9/23   train_loss = 0.091
Epoch 187 Batch   19/23   train_loss = 0.094
Epoch 188 Batch    6/23   train_loss = 0.085
Epoch 188 Batch   16/23   train_loss = 0.084
Epoch 189 Batch    3/23   train_loss = 0.101
Epoch 189 Batch   13/23   train_loss = 0.093
Epoch 190 Batch    0/23   train_loss = 0.099
Epoch 190 Batch   10/23   train_loss = 0.108
Epoch 190 Batch   20/23   train_loss = 0.081
Epoch 191 Batch    7/23   train_loss = 0.092
Epoch 191 Batch   17/23   train_loss = 0.083
Epoch 192 Batch    4/23   train_loss = 0.094
Epoch 192 Batch   14/23   train_loss = 0.099
Epoch 193 Batch    1/23   train_loss = 0.089
Epoch 193 Batch   11/23   train_loss = 0.100
Epoch 193 Batch   21/23   train_loss = 0.097
Epoch 194 Batch    8/23   train_loss = 0.091
Epoch 194 Batch   18/23   train_loss = 0.084
Epoch 195 Batch    5/23   train_loss = 0.102
Epoch 195 Batch   15/23   train_loss = 0.090
Epoch 196 Batch    2/23   train_loss = 0.089
Epoch 196 Batch   12/23   train_loss = 0.088
Epoch 196 Batch   22/23   train_loss = 0.091
Epoch 197 Batch    9/23   train_loss = 0.091
Epoch 197 Batch   19/23   train_loss = 0.094
Epoch 198 Batch    6/23   train_loss = 0.084
Epoch 198 Batch   16/23   train_loss = 0.083
Epoch 199 Batch    3/23   train_loss = 0.101
Epoch 199 Batch   13/23   train_loss = 0.093
Model Trained and Saved
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 48px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Save Parameters</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Save <span class="cm-comment">`seq_length`</span> and <span class="cm-comment">`save_dir`</span> for generating a new TV script.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 48px;"></div><div class="CodeMirror-gutters" style="display: none; height: 78px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Save-Parameters">Save Parameters<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Save-Parameters">¶</a></h2>
<p>Save <code>seq_length</code> and <code>save_dir</code> for generating a new TV script.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[52]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 355.797px; margin-bottom: 0px; border-right-width: 30px; min-height: 96px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># Save parameters for checkpoint</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">helper</span>.<span class="cm-property">save_params</span>((<span class="cm-variable">seq_length</span>, <span class="cm-variable">save_dir</span>))</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 96px;"></div><div class="CodeMirror-gutters" style="display: none; height: 126px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 33px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 22px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># Checkpoint</span></span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 33px;"></div><div class="CodeMirror-gutters" style="display: none; height: 63px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h1 id="Checkpoint">Checkpoint<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Checkpoint">¶</a></h1>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[53]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 574px; margin-bottom: 0px; border-right-width: 30px; min-height: 181px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">tensorflow</span> <span class="cm-keyword">as</span> <span class="cm-variable">tf</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">numpy</span> <span class="cm-keyword">as</span> <span class="cm-variable">np</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">helper</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">import</span> <span class="cm-variable">problem_unittests</span> <span class="cm-keyword">as</span> <span class="cm-variable">tests</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">_</span>, <span class="cm-variable">vocab_to_int</span>, <span class="cm-variable">int_to_vocab</span>, <span class="cm-variable">token_dict</span> = <span class="cm-variable">helper</span>.<span class="cm-property">load_preprocess</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">seq_length</span>, <span class="cm-variable">load_dir</span> = <span class="cm-variable">helper</span>.<span class="cm-property">load_params</span>()</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 181px;"></div><div class="CodeMirror-gutters" style="display: none; height: 211px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 186px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Implement Generate Functions</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Get Tensors</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Get tensors from <span class="cm-comment">`loaded_graph`</span> using the function <span class="cm-link">[</span><span class="cm-link cm-comment">`get_tensor_by_name()`</span><span class="cm-link">]</span><span class="cm-string cm-url">(https://www.tensorflow.org/api_docs/python/tf/Graph#get_tensor_by_name)</span>.  Get the tensors using the following names:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- "input:0"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- "initial_state:0"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- "final_state:0"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable-2">- "probs:0"</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Return the tensors in the following tuple <span class="cm-comment">`(InputTensor, InitialStateTensor, FinalStateTensor, ProbsTensor)`</span> </span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 186px;"></div><div class="CodeMirror-gutters" style="display: none; height: 216px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Implement-Generate-Functions">Implement Generate Functions<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Implement-Generate-Functions">¶</a></h2>
<h3 id="Get-Tensors">Get Tensors<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Get-Tensors">¶</a></h3>
<p>Get tensors from <code>loaded_graph</code> using the function <a href="https://www.tensorflow.org/api_docs/python/tf/Graph#get_tensor_by_name" target="_blank"><code>get_tensor_by_name()</code></a>.  Get the tensors using the following names:</p>
<ul>
<li>"input:0"</li>
<li>"initial_state:0"</li>
<li>"final_state:0"</li>
<li>"probs:0"</li>
</ul>
<p>Return the tensors in the following tuple <code>(InputTensor, InitialStateTensor, FinalStateTensor, ProbsTensor)</code> </p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[54]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 733.906px; margin-bottom: 0px; border-right-width: 30px; min-height: 317px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">get_tensors</span>(<span class="cm-variable">loaded_graph</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Get input, initial state, final state, and probabilities tensor from &lt;loaded_graph&gt;</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param loaded_graph: TensorFlow graph loaded from file</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: Tuple (InputTensor, InitialStateTensor, FinalStateTensor, ProbsTensor)</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">a</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>.<span class="cm-property">get_tensor_by_name</span>(<span class="cm-variable">loaded_graph</span>, <span class="cm-variable">name</span>=<span class="cm-string">'input:0'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">b</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>.<span class="cm-property">get_tensor_by_name</span>(<span class="cm-variable">loaded_graph</span>, <span class="cm-string">'initial_state:0'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">c</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>.<span class="cm-property">get_tensor_by_name</span>(<span class="cm-variable">loaded_graph</span>, <span class="cm-string">'final_state:0'</span>) </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">d</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>.<span class="cm-property">get_tensor_by_name</span>(<span class="cm-variable">loaded_graph</span>, <span class="cm-string">'probs:0'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">a</span>, <span class="cm-variable">b</span>, <span class="cm-variable">c</span>, <span class="cm-variable">d</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_get_tensors</span>(<span class="cm-variable">get_tensors</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 317px;"></div><div class="CodeMirror-gutters" style="display: none; height: 347px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 47px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 19px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-3">### Choose Word</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">Implement the <span class="cm-comment">`pick_word()`</span> function to select the next word using <span class="cm-comment">`probabilities`</span>.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 47px;"></div><div class="CodeMirror-gutters" style="display: none; height: 77px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h3 id="Choose-Word">Choose Word<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Choose-Word">¶</a></h3>
<p>Implement the <code>pick_word()</code> function to select the next word using <code>probabilities</code>.</p>
</div></div></div><div class="cell code_cell rendered unselected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[55]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 700px; margin-bottom: 0px; border-right-width: 30px; min-height: 266px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">def</span> <span class="cm-def">pick_word</span>(<span class="cm-variable">probabilities</span>, <span class="cm-variable">int_to_vocab</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    Pick the next word in the generated text</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param probabilities: Probabilites of the next word</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :param int_to_vocab: Dictionary of word ids as the keys and words as the values</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    :return: String of the predicted word</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">    """</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># TODO: Implement Function</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">return</span> <span class="cm-variable">int_to_vocab</span>[<span class="cm-variable">np</span>.<span class="cm-property">argmax</span>(<span class="cm-variable">probabilities</span>)]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">tests</span>.<span class="cm-property">test_pick_word</span>(<span class="cm-variable">pick_word</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 266px;"></div><div class="CodeMirror-gutters" style="display: none; height: 296px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>Tests Passed
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell rendered unselected" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 48px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 20px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-2">## Generate TV Script</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">This will generate the TV script for you.  Set <span class="cm-comment">`gen_length`</span> to the length of TV script you want to generate.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 48px;"></div><div class="CodeMirror-gutters" style="display: none; height: 78px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h2 id="Generate-TV-Script">Generate TV Script<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Generate-TV-Script">¶</a></h2>
<p>This will generate the TV script for you.  Set <code>gen_length</code> to the length of TV script you want to generate.</p>
</div></div></div><div class="cell code_cell rendered selected" tabindex="2"><div class="input"><div class="prompt input_prompt">In&nbsp;[56]:</div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-ipython"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="width: 18px; pointer-events: none; bottom: 0px;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; min-width: 691.75px; margin-bottom: 0px; border-right-width: 30px; min-height: 759px; padding-right: 0px; padding-bottom: 0px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 17px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">gen_length</span> = <span class="cm-number">200</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-comment"># homer_simpson, moe_szyslak, or Barney_Gumble</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">prime_word</span> = <span class="cm-string">'moe_szyslak'</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">DON'T MODIFY ANYTHING IN THIS CELL THAT IS BELOW THIS LINE</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-string">"""</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-variable">loaded_graph</span> = <span class="cm-variable">tf</span>.<span class="cm-property">Graph</span>()</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-keyword">with</span> <span class="cm-variable">tf</span>.<span class="cm-property">Session</span>(<span class="cm-variable">graph</span>=<span class="cm-variable">loaded_graph</span>) <span class="cm-keyword">as</span> <span class="cm-variable">sess</span>:</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Load saved model</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">loader</span> = <span class="cm-variable">tf</span>.<span class="cm-property">train</span>.<span class="cm-property">import_meta_graph</span>(<span class="cm-variable">load_dir</span> <span class="cm-operator">+</span> <span class="cm-string">'.meta'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">loader</span>.<span class="cm-property">restore</span>(<span class="cm-variable">sess</span>, <span class="cm-variable">load_dir</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Get Tensors from loaded model</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">input_text</span>, <span class="cm-variable">initial_state</span>, <span class="cm-variable">final_state</span>, <span class="cm-variable">probs</span> = <span class="cm-variable">get_tensors</span>(<span class="cm-variable">loaded_graph</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Sentences generation setup</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">gen_sentences</span> = [<span class="cm-variable">prime_word</span> <span class="cm-operator">+</span> <span class="cm-string">':'</span>]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">prev_state</span> = <span class="cm-variable">sess</span>.<span class="cm-property">run</span>(<span class="cm-variable">initial_state</span>, {<span class="cm-variable">input_text</span>: <span class="cm-variable">np</span>.<span class="cm-property">array</span>([[<span class="cm-number">1</span>]])})</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Generate sentences</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">for</span> <span class="cm-variable">n</span> <span class="cm-keyword">in</span> <span class="cm-builtin">range</span>(<span class="cm-variable">gen_length</span>):</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-comment"># Dynamic Input</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">dyn_input</span> = [[<span class="cm-variable">vocab_to_int</span>[<span class="cm-variable">word</span>] <span class="cm-keyword">for</span> <span class="cm-variable">word</span> <span class="cm-keyword">in</span> <span class="cm-variable">gen_sentences</span>[<span class="cm-operator">-</span><span class="cm-variable">seq_length</span>:]]]</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">dyn_seq_length</span> = <span class="cm-builtin">len</span>(<span class="cm-variable">dyn_input</span>[<span class="cm-number">0</span>])</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-comment"># Get Prediction</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">probabilities</span>, <span class="cm-variable">prev_state</span> = <span class="cm-variable">sess</span>.<span class="cm-property">run</span>(</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            [<span class="cm-variable">probs</span>, <span class="cm-variable">final_state</span>],</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">            {<span class="cm-variable">input_text</span>: <span class="cm-variable">dyn_input</span>, <span class="cm-variable">initial_state</span>: <span class="cm-variable">prev_state</span>})</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">pred_word</span> = <span class="cm-variable">pick_word</span>(<span class="cm-variable">probabilities</span>[<span class="cm-variable">dyn_seq_length</span><span class="cm-operator">-</span><span class="cm-number">1</span>], <span class="cm-variable">int_to_vocab</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">gen_sentences</span>.<span class="cm-property">append</span>(<span class="cm-variable">pred_word</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-comment"># Remove tokens</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tv_script</span> = <span class="cm-string">' '</span>.<span class="cm-property">join</span>(<span class="cm-variable">gen_sentences</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-keyword">for</span> <span class="cm-variable">key</span>, <span class="cm-variable">token</span> <span class="cm-keyword">in</span> <span class="cm-variable">token_dict</span>.<span class="cm-property">items</span>():</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">ending</span> = <span class="cm-string">' '</span> <span class="cm-keyword">if</span> <span class="cm-variable">key</span> <span class="cm-keyword">in</span> [<span class="cm-string">'\n'</span>, <span class="cm-string">'('</span>, <span class="cm-string">'"'</span>] <span class="cm-keyword">else</span> <span class="cm-string">''</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        <span class="cm-variable">tv_script</span> = <span class="cm-variable">tv_script</span>.<span class="cm-property">replace</span>(<span class="cm-string">' '</span> <span class="cm-operator">+</span> <span class="cm-variable">token</span>.<span class="cm-property">lower</span>(), <span class="cm-variable">key</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tv_script</span> = <span class="cm-variable">tv_script</span>.<span class="cm-property">replace</span>(<span class="cm-string">'\n '</span>, <span class="cm-string">'\n'</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-variable">tv_script</span> = <span class="cm-variable">tv_script</span>.<span class="cm-property">replace</span>(<span class="cm-string">'( '</span>, <span class="cm-string">'('</span>)</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">        </span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">    <span class="cm-builtin">print</span>(<span class="cm-variable">tv_script</span>)</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 759px;"></div><div class="CodeMirror-gutters" style="display: none; height: 789px;"></div></div></div></div></div></div><div class="widget-area" style="display: none;"><div class="prompt"><button class="close">×</button></div><div class="widget-subarea"></div></div><div class="output_wrapper"><div class="out_prompt_overlay prompt" title="click to scroll output; double click to hide" style=""></div><div class="output" style=""><div class="output_area"><div class="prompt"></div><div class="output_subarea output_text output_stream output_stdout"><pre>moe_szyslak:(tries tap) nothin'.
moe_szyslak:(sings) just once i wish cupid / would draw back his bow / and shoot me a cutie / whose place to make you up...
all:(singing) this place is always so loud.
homer_simpson:(sheepish) these mother i that came in the day.
homer_simpson:(singing) in the camera.
dr. _julius_hibbert: yeah, i ain't right! my precious is... well, the world's dumbest nice is you...
chief_wiggum:(tipsy) i'm an ma / sure, my chick?
moe_szyslak:(into phone) dad? get 'em, love! like the stage i ever?
seymour_skinner: yes! that's the name is the cash... right, my name is guy with my beer.
moe_szyslak: aw, quitcher somebody drinkin' sad,...
homer_simpson:(prompting) but what am i?
moe_szyslak: what does?
moe_szyslak: okay, but i don't care back.
homer_simpson:(dimly) oh yeah
</pre></div></div></div><div class="btn btn-default output_collapsed" title="click to expand output" style="display: none;">. . .</div></div></div><div class="cell text_cell unselected rendered" tabindex="2"><div class="prompt input_prompt"></div><div class="inner_cell"><div class="ctb_hideshow"><div class="celltoolbar"></div></div><div class="input_area"><div class="CodeMirror cm-s-default CodeMirror-wrap"><div style="overflow: hidden; position: relative; width: 3px; height: 0px; top: 5.59375px; left: 5.59375px;"><textarea autocorrect="off" autocapitalize="off" spellcheck="false" tabindex="0" style="position: absolute; bottom: -1em; padding: 0px; width: 1000px; height: 1em; outline: none;"></textarea></div><div class="CodeMirror-vscrollbar" cm-not-content="true" style="bottom: 0px; width: 18px; pointer-events: none;"><div style="min-width: 1px; height: 0px;"></div></div><div class="CodeMirror-hscrollbar" cm-not-content="true" style="height: 18px; pointer-events: none;"><div style="height: 100%; min-height: 1px; width: 0px;"></div></div><div class="CodeMirror-scrollbar-filler" cm-not-content="true"></div><div class="CodeMirror-gutter-filler" cm-not-content="true"></div><div class="CodeMirror-scroll" tabindex="-1"><div class="CodeMirror-sizer" style="margin-left: 0px; padding-right: 0px; padding-bottom: 0px; margin-bottom: 0px; border-right-width: 30px; min-height: 191px;"><div style="position: relative; top: 0px;"><div class="CodeMirror-lines"><div style="position: relative; outline: none;"><div class="CodeMirror-measure"></div><div class="CodeMirror-measure"></div><div style="position: relative; z-index: 1;"></div><div class="CodeMirror-cursors"><div class="CodeMirror-cursor" style="left: 0px; top: 0px; height: 22px;">&nbsp;</div></div><div class="CodeMirror-code"><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># The TV Script is Nonsensical</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">It's ok if the TV script doesn't make any sense.  We trained on less than a megabyte of text.  In order to get good results, you'll have to use a smaller vocabulary or get more data.  Luckly there's more data!  As we mentioned in the begging of this project, this is a subset of <span class="cm-link">[another dataset]</span><span class="cm-string cm-url">(https://www.kaggle.com/wcukierski/the-simpsons-by-the-data)</span>.  We didn't have you train on all the data, because that would take too long.  However, you are free to train your neural network on all the data.  After you complete the project, of course.</span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;"><span class="cm-header cm-header-1"># Submitting This Project</span></span></pre><pre class=" CodeMirror-line "><span style="padding-right: 0.1px;">When submitting this project, make sure to run all the cells before saving the notebook. Save the notebook file as "dlnd_tv_script_generation.ipynb" and save it as a HTML file under "File" -&gt; "Download as". Include the "helper.py" and "problem_unittests.py" files in your submission.</span></pre></div></div></div></div></div><div style="position: absolute; height: 30px; width: 1px; border-bottom: 0px solid transparent; top: 191px;"></div><div class="CodeMirror-gutters" style="display: none; height: 221px;"></div></div></div></div><div class="text_cell_render rendered_html" tabindex="-1"><h1 id="The-TV-Script-is-Nonsensical">The TV Script is Nonsensical<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#The-TV-Script-is-Nonsensical">¶</a></h1>
<p>It's ok if the TV script doesn't make any sense.  We trained on less than a megabyte of text.  In order to get good results, you'll have to use a smaller vocabulary or get more data.  Luckly there's more data!  As we mentioned in the begging of this project, this is a subset of <a href="https://www.kaggle.com/wcukierski/the-simpsons-by-the-data" target="_blank">another dataset</a>.  We didn't have you train on all the data, because that would take too long.  However, you are free to train your neural network on all the data.  After you complete the project, of course.</p>
<h1 id="Submitting-This-Project">Submitting This Project<a class="anchor-link" href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#Submitting-This-Project">¶</a></h1>
<p>When submitting this project, make sure to run all the cells before saving the notebook. Save the notebook file as "dlnd_tv_script_generation.ipynb" and save it as a HTML file under "File" -&gt; "Download as". Include the "helper.py" and "problem_unittests.py" files in your submission.</p>
</div></div></div></div><div class="end_space"></div></div>
        <div id="tooltip" class="ipython_tooltip" style="display:none"><div class="tooltipbuttons"><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" role="button" class="ui-button"><span class="ui-icon ui-icon-close">Close</span></a><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" class="ui-corner-all" role="button" id="expanbutton" title="Grow the tooltip vertically (press shift-tab twice)"><span class="ui-icon ui-icon-plus">Expand</span></a><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" role="button" class="ui-button" title="show the current docstring in pager (press shift-tab 4 times)"><span class="ui-icon ui-icon-arrowstop-l-n">Open in Pager</span></a><a href="http://35.158.118.232:8888/notebooks/dlnd_tv_script_generation.ipynb#" role="button" class="ui-button" title="Tooltip will linger for 10 seconds while you type" style="display: none;"><span class="ui-icon ui-icon-clock">Close</span></a></div><div class="pretooltiparrow"></div><div class="tooltiptext smalltooltip"></div></div>
    </div>
</div>



</div>



<div id="pager" class="ui-resizable">
    <div id="pager-contents">
        <div id="pager-container" class="container"></div>
    </div>
    <div id="pager-button-area"><a role="button" title="Open the pager in an external window" class="ui-button"><span class="ui-icon ui-icon-extlink"></span></a><a role="button" title="Close the pager" class="ui-button"><span class="ui-icon ui-icon-close"></span></a></div>
<div class="ui-resizable-handle ui-resizable-n" style="z-index: 90;"></div></div>






<script type="text/javascript">
    sys_info = {"sys_platform": "linux", "sys_executable": "/home/carnd/anaconda3/envs/dl/bin/python", "sys_version": "3.5.2 | packaged by conda-forge | (default, Jan 19 2017, 15:28:33) \n[GCC 4.8.2 20140120 (Red Hat 4.8.2-15)]", "notebook_path": "/home/carnd/anaconda3/envs/dl/lib/python3.5/site-packages/notebook", "notebook_version": "4.4.1", "commit_hash": "", "commit_source": "", "default_encoding": "UTF-8", "platform": "Linux-4.4.0-66-generic-x86_64-with-debian-stretch-sid", "os_name": "posix"};
</script>

<script src="./dlnd_tv_script_generation_files/encoding.js" charset="utf-8"></script>


    <script src="./dlnd_tv_script_generation_files/main.min.js" type="text/javascript" charset="utf-8"></script>






<div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; padding: 0px; border: 0px; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-family: STIXMathJax_Main, sans-serif;"></div></div><div class="widget-modal-backdrop widget-modal-hidden"><div class="widget-modal-text"><i class="fa fa-cog fa-spin"></i><div>Rendering widgets...</div></div><div class="progress widget-modal-progress"><div class="progress-bar" role="progressbar" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100" style="width: 0%;"></div></div></div></body></html>